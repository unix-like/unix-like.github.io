<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Linux运维装逼指南</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.unix-like.com/"/>
  <updated>2017-06-09T12:57:21.432Z</updated>
  <id>http://www.unix-like.com/</id>
  
  <author>
    <name>Linux运维装逼指南</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用innobackup备份恢复mysql</title>
    <link href="http://www.unix-like.com/2017/06/09/database/%E7%94%A8innobackup%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8Dmysql/"/>
    <id>http://www.unix-like.com/2017/06/09/database/用innobackup备份恢复mysql/</id>
    <published>2017-06-09T12:54:42.000Z</published>
    <updated>2017-06-09T12:57:21.432Z</updated>
    
    <content type="html"><![CDATA[<p>一般mysql的备份还原会使用mysql自带的mysqldump，但是当数据库比较大多时候，使用mysqldump备份恢复数据库耗时相当的长。为了尽可能的缩短mysql数据库备份恢复的时间窗口，可以使用percona提供的第三方工具xtrabackup来备份还原。</p>
<a id="more"></a>
<h1 id="一-安装xtrabackup"><a href="#一-安装xtrabackup" class="headerlink" title="一.安装xtrabackup"></a>一.安装xtrabackup</h1><p>在使用该脚本之前必须按照xtrabackup，按照命令如下：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -qa |grep xtrabackup</div></pre></td></tr></table></figure></p>
<p>如果存在老版本，就卸载<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm <span class="_">-e</span> --nodeps xtrabackup</div></pre></td></tr></table></figure></p>
<p>安装新版本<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y percona-xtrabackup.x86_64</div></pre></td></tr></table></figure></p>
<p>安装qpress用于xtrabackup的恢复还原<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y qpress</div></pre></td></tr></table></figure></p>
<p><strong>注意:</strong> xtrabackup的版本一定是2.2.3以上 </p>
<h1 id="二-xtrabackup的shell备份脚本"><a href="#二-xtrabackup的shell备份脚本" class="headerlink" title="二.xtrabackup的shell备份脚本"></a>二.xtrabackup的shell备份脚本</h1><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>使用下面的shell脚本，需要根据不同数据库实例的自身情况，为以下变量设置不同的值</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">HOST_IP=<span class="string">'10.1.17.19'</span>                    <span class="comment">#备份实例服务器的IP地址</span></div><div class="line">MYSQL_PWD=<span class="string">"xxx"</span>          				<span class="comment">#mysql用户debian-sys-maint的密码</span></div><div class="line">MYSQL_SOCKET=<span class="string">"xxx"</span>       				<span class="comment">#mysql实例的socket，eg. /tmp/mysql.sock</span></div><div class="line">MYSQL_PORT=3306                         <span class="comment">#mysql的端口</span></div><div class="line">MYSQL_CNF_FILE=<span class="string">"/etc/my.cnf"</span>            <span class="comment">#mysql实例的配置文件</span></div><div class="line">INSTNANCE_NAME=<span class="string">"inventory"</span>              <span class="comment">#mysql实例名</span></div><div class="line"></div><div class="line"><span class="comment"># 根据不同存储设置不同的值。FIO 为16， SAS为8</span></div><div class="line"><span class="comment"># 也可以根据mysql实例的io负载的具体情况增大或减少值</span></div><div class="line"></div><div class="line">RUN_THREAD_NUM=8</div><div class="line">COMPRESS_THREAD_NUM=8</div></pre></td></tr></table></figure>
<p><strong>mysql备份shell脚本</strong></p>
<p>mysql备份shell如下：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">INNOBACKUPEX=`<span class="built_in">which</span> innobackupex`</div><div class="line">CURL=`<span class="built_in">which</span> curl`</div><div class="line">RSYNC=`<span class="built_in">which</span> rsync`</div><div class="line">BWLIMIT=40960 <span class="comment">#40MB</span></div><div class="line"></div><div class="line">HOST_IP=<span class="string">'192.168.1.21'</span></div><div class="line">REMOTE_IP=<span class="string">'192.168.10.54'</span></div><div class="line"></div><div class="line">MYSQL_USER=<span class="string">"debian-sys-maint"</span></div><div class="line">MYSQL_PWD=<span class="string">"xxx"</span></div><div class="line">MYSQL_SOCKET=<span class="string">"/tmp/mysqld.sock"</span></div><div class="line">MYSQL_PORT=3306</div><div class="line">MYSQL_CNF_FILE=<span class="string">"/etc/my.cnf"</span></div><div class="line">INSTNANCE_NAME=<span class="string">"inventory"</span></div><div class="line"></div><div class="line">BACKUP_DIR=<span class="string">"/home/jm/backup"</span></div><div class="line">BACKUP_FILE=<span class="string">"mysql-"</span><span class="variable">$INSTNANCE_NAME</span></div><div class="line">BACKUP_FILES_DIR=<span class="string">"mysql-"</span><span class="variable">$INSTNANCE_NAME</span></div><div class="line">TRANSFER_FILE=</div><div class="line"></div><div class="line">WEEK=`date +%w`</div><div class="line"><span class="comment">#WEEK=`date -d yesterday +%w`</span></div><div class="line">CUR_DATE=`date +%F`</div><div class="line"></div><div class="line">RUN_THREAD_NUM=8</div><div class="line">COMPRESS_THREAD_NUM=8</div><div class="line"></div><div class="line">SENTO=<span class="string">"peid1@jumei.com"</span></div><div class="line"></div><div class="line">SUBJECT=<span class="string">"MySQL Instance <span class="variable">$&#123;INSTNANCE_NAME&#125;</span> backup Error"</span></div><div class="line">BACKUP_LOG=<span class="variable">$BACKUP_DIR</span><span class="string">"/backup.log"</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">BINARY_BACKUP</span></span>() &#123;</div><div class="line">		TRANSFER_FILE=<span class="variable">$BACKUP_FILE</span><span class="string">"-"</span><span class="variable">$CUR_DATE</span><span class="string">".xbstream"</span></div><div class="line"> 		<span class="variable">$INNOBACKUPEX</span> --user=<span class="variable">$MYSQL_USER</span>  --password=<span class="variable">$MYSQL_PWD</span> --socket=<span class="variable">$MYSQL_SOCKET</span> --slave-info  --parallel=<span class="variable">$RUN_THREAD_NUM</span> --compress --compress-threads <span class="variable">$COMPRESS_THREAD_NUM</span> --defaults-file=<span class="variable">$MYSQL_CNF_FILE</span> --no-version-check --stream=xbstream  <span class="variable">$BACKUP_DIR</span>  &gt; <span class="variable">$BACKUP_DIR</span>/<span class="variable">$TRANSFER_FILE</span></div><div class="line"></div><div class="line">		sleep 10</div><div class="line"></div><div class="line">		grep <span class="string">"innobackupex: completed OK"</span> <span class="variable">$BACKUP_LOG</span> &gt; /dev/null</div><div class="line"></div><div class="line">		<span class="keyword">if</span> [ $? <span class="_">-eq</span> 0 ]</div><div class="line">			<span class="keyword">then</span></div><div class="line">   			<span class="built_in">echo</span> <span class="string">"Backup finish successfully !"</span></div><div class="line">			<span class="keyword">else</span></div><div class="line">   			<span class="variable">$CURL</span> <span class="_">-d</span> <span class="string">"menu=errorlog"</span> <span class="_">-d</span> email_destinations=<span class="string">"<span class="variable">$SENTO</span>"</span> <span class="_">-d</span> email_subject=<span class="string">"<span class="variable">$SUBJECT</span>"</span> <span class="_">-d</span> email_content=<span class="string">"<span class="variable">$&#123;HOST_IP&#125;</span> MYSQL INSTANCE <span class="variable">$INSTNANCE_NAME</span> backup failed,please check !"</span> http://email.int.jumei.com/send</div><div class="line">		<span class="keyword">fi</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">RSYNC_REMOTE</span></span>() &#123;</div><div class="line">		<span class="variable">$RSYNC</span> -av --bwlimit=<span class="variable">$BWLIMIT</span> <span class="variable">$BACKUP_DIR</span>/<span class="variable">$TRANSFER_FILE</span> root@<span class="variable">$&#123;REMOTE_IP&#125;</span>::mysql/</div><div class="line"></div><div class="line">		<span class="keyword">if</span> [ $? <span class="_">-eq</span> 0 ];<span class="keyword">then</span></div><div class="line">        	rm <span class="_">-f</span> <span class="variable">$BACKUP_DIR</span>/<span class="variable">$TRANSFER_FILE</span></div><div class="line">			<span class="keyword">else</span></div><div class="line">  			<span class="variable">$CURL</span> <span class="_">-d</span> <span class="string">"menu=errorlog"</span> <span class="_">-d</span> email_destinations=<span class="string">"<span class="variable">$SENTO</span>"</span> <span class="_">-d</span> email_subject=<span class="string">"<span class="variable">$SUBJECT</span>"</span> <span class="_">-d</span> email_content=<span class="string">"<span class="variable">$&#123;HOST_IP&#125;</span> backup file send to <span class="variable">$&#123;REMOTE_IP&#125;</span> failed,please check !"</span> http://email.int.jumei.com/send</div><div class="line"><span class="keyword">fi</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># main procedure</span></div><div class="line"></div><div class="line">BINARY_BACKUP</div><div class="line"></div><div class="line">RSYNC_REMOTE</div></pre></td></tr></table></figure></p>
<p><strong> xtrabackup的shell恢复脚本 </strong></p>
<p>使用方法 <code>./mysql_restore inventory.stream</code></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line">FILE_NAME=<span class="variable">$1</span></div><div class="line">DES_DIR=/mysql/backup/   <span class="comment">#目标文件夹</span></div><div class="line">DATA_DIR=/mysql/data ＃mysql的数据文件件</div><div class="line">MYSQL_SOCKET=/tmp/mysqld.sock</div><div class="line">SENTO=peid1@jumei.com</div><div class="line"></div><div class="line">mysqladmin ping -S<span class="variable">$MYSQL_SOCKET</span> | grep alive &gt;/dev/null</div><div class="line"></div><div class="line"><span class="keyword">if</span> [ $? == 0 ]</div><div class="line">	<span class="keyword">then</span></div><div class="line">		mysqladmin shutdown -S<span class="variable">$MYSQL_SOCKET</span></div><div class="line">		sleep 10</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">rm -rf <span class="variable">$DATA_DIR</span></div><div class="line"></div><div class="line">[ ! <span class="_">-d</span> <span class="variable">$DES_DIR</span> ] &amp;&amp; mkdir <span class="variable">$DES_DIR</span></div><div class="line"></div><div class="line">xbstream -C <span class="variable">$DES_DIR</span> -x -v &lt; <span class="variable">$FILE_NAME</span></div><div class="line"><span class="comment">#cd $DES_DIR</span></div><div class="line">innobackupex --decompress --parallel=32 <span class="variable">$DES_DIR</span></div><div class="line">innobackupex --apply-log <span class="variable">$DES_DIR</span></div><div class="line">chown -R mysql.mysql <span class="variable">$DES_DIR</span></div><div class="line"></div><div class="line">mv <span class="variable">$DES_DIR</span> <span class="variable">$DATA_DIR</span></div><div class="line">rm <span class="_">-f</span> <span class="variable">$DATA_DIR</span>/ib_logfile*</div><div class="line">mysqld_safe --defaults-file=/etc/my.cnf --user=mysql &amp;</div><div class="line"></div><div class="line">sleep 10</div><div class="line"></div><div class="line">mysqladmin ping -S<span class="variable">$MYSQL_SOCKET</span> | grep alive &gt;/dev/null</div><div class="line"></div><div class="line"><span class="keyword">if</span> [ $? == 0 ]</div><div class="line">	<span class="keyword">then</span></div><div class="line">	/usr/bin/curl <span class="_">-d</span> <span class="string">"menu=errorlog"</span> <span class="_">-d</span> email_destinations=<span class="string">"peid1@jumei.com"</span> <span class="_">-d</span> email_subject=<span class="string">"<span class="variable">$FILE_NAME</span> has been restored"</span> <span class="_">-d</span> email_content=<span class="string">""</span> http://email.int.jumei.com/send</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">mysql -S<span class="variable">$MYSQL_SOCKET</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一般mysql的备份还原会使用mysql自带的mysqldump，但是当数据库比较大多时候，使用mysqldump备份恢复数据库耗时相当的长。为了尽可能的缩短mysql数据库备份恢复的时间窗口，可以使用percona提供的第三方工具xtrabackup来备份还原。&lt;/p&gt;
    
    </summary>
    
      <category term="database" scheme="http://www.unix-like.com/categories/database/"/>
    
    
      <category term="mysql" scheme="http://www.unix-like.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>linux下添加redis扩展</title>
    <link href="http://www.unix-like.com/2017/06/08/service/linux%E4%B8%8B%E6%B7%BB%E5%8A%A0redis%E6%89%A9%E5%B1%95/"/>
    <id>http://www.unix-like.com/2017/06/08/service/linux下添加redis扩展/</id>
    <published>2017-06-08T08:33:32.000Z</published>
    <updated>2017-06-08T08:52:50.707Z</updated>
    
    <content type="html"><![CDATA[<p>本文是安装redis扩展，但其他扩展的安装方式也是如此，具有通用性。</p>
<a id="more"></a>
<h1 id="下载扩展"><a href="#下载扩展" class="headerlink" title="下载扩展"></a>下载扩展</h1><p>到<a href="http://pecl.php.net下载扩展" target="_blank" rel="external">http://pecl.php.net下载扩展</a></p>
<h1 id="解压并进入包目录"><a href="#解压并进入包目录" class="headerlink" title="解压并进入包目录"></a>解压并进入包目录</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">tar -xvf redis-2.2.7.tar </div><div class="line"><span class="built_in">cd</span> redis-2.2.7</div></pre></td></tr></table></figure>
<h1 id="使用php扩展添加信息"><a href="#使用php扩展添加信息" class="headerlink" title="使用php扩展添加信息"></a>使用php扩展添加信息</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/data/apps/php/bin/phpize</div></pre></td></tr></table></figure>
<h1 id="添加PHP配置信息"><a href="#添加PHP配置信息" class="headerlink" title="添加PHP配置信息"></a>添加PHP配置信息</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./configure --with-php-config=/data/apps/php/bin/php-config</div></pre></td></tr></table></figure>
<h1 id="编译生成扩展库"><a href="#编译生成扩展库" class="headerlink" title="编译生成扩展库"></a>编译生成扩展库</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make </div><div class="line">sudo make install</div></pre></td></tr></table></figure>
<h1 id="查看扩展库生成"><a href="#查看扩展库生成" class="headerlink" title="查看扩展库生成"></a>查看扩展库生成</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /goto_data/Application/php/lib/php/extensions/no-debug-non-zts-20090626/</div><div class="line">ls    <span class="comment">#是否有redis.so</span></div></pre></td></tr></table></figure>
<h1 id="修改php-ini"><a href="#修改php-ini" class="headerlink" title="修改php.ini"></a>修改php.ini</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /data/apps/php/etc/</div><div class="line">sudo vim php.ini</div></pre></td></tr></table></figure>
<p>文件末尾添加 extension=redis.so 即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文是安装redis扩展，但其他扩展的安装方式也是如此，具有通用性。&lt;/p&gt;
    
    </summary>
    
      <category term="service" scheme="http://www.unix-like.com/categories/service/"/>
    
    
      <category term="php" scheme="http://www.unix-like.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat环境搭建及配置规范</title>
    <link href="http://www.unix-like.com/2017/06/08/service/tomcat%E8%BD%AF%E4%BB%B6%E9%83%A8%E7%BD%B2%E5%8F%8A%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/"/>
    <id>http://www.unix-like.com/2017/06/08/service/tomcat软件部署及项目部署脚本/</id>
    <published>2017-06-08T02:11:56.000Z</published>
    <updated>2017-06-08T02:29:56.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件版本及安装路径"><a href="#软件版本及安装路径" class="headerlink" title="软件版本及安装路径"></a>软件版本及安装路径</h1><p>JDK的版本1.7.0_79 </p>
<p>Tomcat的版本7.0.65</p>
<p>JDK的安装路径: /gotwo_data/Application </p>
<p>Tomcat的安装路径: /gotwo_data/Application</p>
<p>tomcat目录的命名规则:tomcat+对外提供服务的web端口号，比如tomcat18080。 </p>
<p>Tomcat目录及其内部的子目录和文件权限:<code>chown -R tomcat.tomcat tomcat18080;chmod -R 775 tomcat18080</code></p>
<a id="more"></a>
<h1 id="Tomcat端口的配置规范"><a href="#Tomcat端口的配置规范" class="headerlink" title="Tomcat端口的配置规范"></a>Tomcat端口的配置规范</h1><ul>
<li>所有端口为5位数：</li>
<li>前3位数代表单独的web应用</li>
<li>第4位为web应用的多个tomcat实例序号</li>
<li>第5位表示提供不同服务的端口：<pre><code>0:表示web服务端口
3:表示SSL的连接端口
5:表示用于停止Tomcat的端口
8:jmx远程访问端口
9:Apache的侦听端口
</code></pre></li>
</ul>
<h1 id="配置catalina-sh"><a href="#配置catalina-sh" class="headerlink" title="配置catalina.sh"></a>配置catalina.sh</h1><p>加入下面的配置项(以18080为例)：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> JAVA_HOME=/gotwo_data/Application/jdk1.7.0_79</div><div class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</div><div class="line"><span class="built_in">export</span> TOMCAT_HOME=/gotwo_data/Application/tomcat18080</div><div class="line"><span class="built_in">export</span> CATALINA_HOME=/gotwo_data/Application/tomcat18080</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</div><div class="line"></div><div class="line">JAVA_OPTS=<span class="string">" -server -Xms2048M -Xmx2048M -XX:PermSize=256M -XX:MaxPermSize=256M -Xss256k -XX:+PrintGCDetails -Xloggc:/gotwo_data/Application/tomcat18080/logs/gc18080.log"</span></div><div class="line"></div><div class="line">CATALINA_OPTS=<span class="string">"-Djava.rmi.server.hostname=192.168.2.64 -Dcom.sun.management.jmxremote.port=18088 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"</span></div></pre></td></tr></table></figure>
<h1 id="配置server-xml"><a href="#配置server-xml" class="headerlink" title="配置server.xml"></a>配置server.xml</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;Server port=<span class="string">"18085"</span> shutdown=<span class="string">"SHUTDOWN"</span>&gt; 此端口为关闭本tomcat实例的端口, 必须设置, 且各个tomcat实例之间不能重复.</div><div class="line"></div><div class="line">&lt;Connector URIEncoding=<span class="string">"UTF-8"</span> connectionTimeout=<span class="string">"20000"</span> port=<span class="string">"18080"</span> protocol=<span class="string">"org.apache.coyote.http11.Http11NioProtocol"</span> redirectPort=<span class="string">"18083"</span>/&gt;</div><div class="line"></div><div class="line">&lt;Connector port=<span class="string">"18089"</span> protocol=<span class="string">"AJP/1.3"</span> redirectPort=<span class="string">"18083"</span> /&gt;</div></pre></td></tr></table></figure>
<h1 id="tomcat软件部署脚本"><a href="#tomcat软件部署脚本" class="headerlink" title="tomcat软件部署脚本"></a>tomcat软件部署脚本</h1><p>deploy_tomcat.sh， 使用该脚本部署新tomcat的命令如下：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo sh deploy_tomcat.sh  180 1 /gotwo_data/deploy/photography-2.0.war</div></pre></td></tr></table></figure></p>
<p>180：表示该tomcat实例的前3位端口号</p>
<p>1: 表示该tomcat实例的第4位端口号</p>
<p>/gotwo_data/deploy/photography-2.0.war  ： 表示要部署的war包</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">PROJ_CODE=<span class="variable">$1</span></div><div class="line">TOMCAT_SEQ=<span class="variable">$2</span></div><div class="line">PROJ_PKG=<span class="variable">$3</span></div><div class="line"></div><div class="line">WEB_PORT=<span class="string">"<span class="variable">$&#123;PROJ_CODE&#125;</span><span class="variable">$&#123;TOMCAT_SEQ&#125;</span>0"</span></div><div class="line">SSL_PORT=<span class="string">"<span class="variable">$&#123;PROJ_CODE&#125;</span><span class="variable">$&#123;TOMCAT_SEQ&#125;</span>3"</span></div><div class="line">SHUTDOWN_PORT=<span class="string">"<span class="variable">$&#123;PROJ_CODE&#125;</span><span class="variable">$&#123;TOMCAT_SEQ&#125;</span>5"</span></div><div class="line">JMX_PORT=<span class="string">"<span class="variable">$&#123;PROJ_CODE&#125;</span><span class="variable">$&#123;TOMCAT_SEQ&#125;</span>8"</span></div><div class="line">APACHE_PORT=<span class="string">"<span class="variable">$&#123;PROJ_CODE&#125;</span><span class="variable">$&#123;TOMCAT_SEQ&#125;</span>9"</span></div><div class="line"></div><div class="line">TOMCAT_PKG=<span class="string">"/gotwo_data/scripts/template/tomcat"</span></div><div class="line">DEST_TOMCAT_DIR=<span class="string">"/gotwo_data/Application/tomcat<span class="variable">$&#123;WEB_PORT&#125;</span>"</span></div><div class="line">CATA_TEMPLATE=<span class="string">"<span class="variable">$&#123;DEST_TOMCAT_DIR&#125;</span>/bin/catalina.sh"</span></div><div class="line">XML_TEMPLATE=<span class="string">"<span class="variable">$&#123;DEST_TOMCAT_DIR&#125;</span>/conf/server.xml"</span></div><div class="line"></div><div class="line"><span class="comment">#echo $DEST_TOMCAT_DIR</span></div><div class="line"><span class="comment">#echo $CATA_TEMPLATE</span></div><div class="line"><span class="comment">#echo $XML_TEMPLATE</span></div><div class="line"></div><div class="line">cp -r <span class="variable">$TOMCAT_PKG</span> <span class="variable">$DEST_TOMCAT_DIR</span></div><div class="line"></div><div class="line">sed -i <span class="string">"s/##WEB_PORT##/<span class="variable">$&#123;WEB_PORT&#125;</span>/g"</span> <span class="variable">$XML_TEMPLATE</span></div><div class="line">sed -i <span class="string">"s/##SSL_PORT##/<span class="variable">$&#123;SSL_PORT&#125;</span>/g"</span> <span class="variable">$XML_TEMPLATE</span></div><div class="line">sed -i <span class="string">"s/##SHUTDOWN_PORT##/<span class="variable">$&#123;SHUTDOWN_PORT&#125;</span>/g"</span> <span class="variable">$XML_TEMPLATE</span></div><div class="line"></div><div class="line">sed -i <span class="string">"s/##WEB_PORT##/<span class="variable">$&#123;WEB_PORT&#125;</span>/g"</span> <span class="variable">$CATA_TEMPLATE</span></div><div class="line">sed -i <span class="string">"s/##JMX_PORT##/<span class="variable">$&#123;JMX_PORT&#125;</span>/g"</span> <span class="variable">$CATA_TEMPLATE</span></div><div class="line"></div><div class="line">rm -rf <span class="variable">$&#123;DEST_TOMCAT_DIR&#125;</span>/webapps/*</div><div class="line">cp <span class="variable">$PROJ_PKG</span> <span class="variable">$&#123;DEST_TOMCAT_DIR&#125;</span>/webapps/ROOT.war</div><div class="line"></div><div class="line">chown -R tomcat.tomcat <span class="variable">$DEST_TOMCAT_DIR</span></div></pre></td></tr></table></figure>
<h1 id="tomcat项目部署脚本"><a href="#tomcat项目部署脚本" class="headerlink" title="tomcat项目部署脚本"></a>tomcat项目部署脚本</h1><p>deploy_proj.sh， 使用该脚本部署新tomcat的命令如下：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo sh deploy_proj.sh  18010 /gotwo_data/deploy/photography-2.0.war</div></pre></td></tr></table></figure></p>
<p>18010：表示该tomcat实例的端口号</p>
<p>/gotwo_data/deploy/photography-2.0.war  ： 表示要部署的war包</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">TOMCAT_PORT=<span class="variable">$1</span></div><div class="line">PROJ_FILE=<span class="variable">$2</span></div><div class="line"></div><div class="line">BASE_DIR=<span class="string">"/gotwo_data/Application/tomcat"</span></div><div class="line">TOMCAT_DIR=<span class="string">"<span class="variable">$&#123;BASE_DIR&#125;</span><span class="variable">$&#123;TOMCAT_PORT&#125;</span>"</span></div><div class="line">WORK_DIR=<span class="string">"<span class="variable">$&#123;TOMCAT_DIR&#125;</span>/work"</span></div><div class="line">WEBAPPS_DIR=<span class="string">"<span class="variable">$&#123;TOMCAT_DIR&#125;</span>/webapps"</span></div><div class="line">UPLOAD_BAK_DIR=<span class="string">"<span class="variable">$WEBAPPS_DIR</span>/upload_`date +%F`"</span></div><div class="line">BIN_DIR=<span class="string">"<span class="variable">$&#123;TOMCAT_DIR&#125;</span>/bin"</span></div><div class="line"></div><div class="line">UNZIP=`<span class="built_in">which</span> unzip`</div><div class="line"></div><div class="line"><span class="comment">#Stop tomcat instance</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Shutdown Tomcat <span class="variable">$TOMCAT_PORT</span> instance ..."</span></div><div class="line">sudo -u tomcat sh <span class="variable">$&#123;BIN_DIR&#125;</span>/catalina.sh stop</div><div class="line">sleep 10</div><div class="line"></div><div class="line"><span class="comment">#ps -ef|grep "tomcat$&#123;TOMCAT_PORT&#125;"</span></div><div class="line">ps -ef|grep <span class="string">"tomcat<span class="variable">$&#123;TOMCAT_PORT&#125;</span>"</span>|grep -v <span class="string">"grep"</span> &gt; /dev/null</div><div class="line"></div><div class="line"><span class="keyword">while</span> [ <span class="string">"$?"</span> == <span class="string">"0"</span> ]</div><div class="line"><span class="keyword">do</span></div><div class="line">   sleep 5</div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"Shutdown completed !"</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$TOMCAT_PORT</span>"</span> == <span class="string">"18000"</span> ]</div><div class="line"><span class="keyword">then</span></div><div class="line">   <span class="built_in">echo</span> <span class="string">"purge web cache ..."</span></div><div class="line">   rm -rf /gotwo_data/sites/proxycache/*</div><div class="line">   mv <span class="variable">$WEBAPPS_DIR</span>/ROOT/ueditor/jsp/upload <span class="variable">$UPLOAD_BAK_DIR</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"Remove war package with last version ......"</span></div><div class="line">rm -rf <span class="variable">$&#123;WORK_DIR&#125;</span>/*</div><div class="line">rm -rf <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT/</div><div class="line">mv <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT.war <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT.war`date +%F`</div><div class="line">mv <span class="variable">$PROJ_FILE</span> <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT.war</div><div class="line"></div><div class="line"><span class="comment">#chown tomcat.tomcat $&#123;WEBAPPS_DIR&#125;/ROOT.war</span></div><div class="line">sudo -u tomcat <span class="variable">$UNZIP</span> <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT.war <span class="_">-d</span> <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT</div><div class="line">cp <span class="_">-f</span> <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/x.properties  <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT/WEB-INF/classes/x.properties</div><div class="line">cp <span class="_">-f</span> <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/logback.xml  <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT/WEB-INF/classes/logback.xml</div><div class="line">cp <span class="_">-f</span> <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/IOC.xml  <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT/WEB-INF/classes/IOC.xml</div><div class="line">cp <span class="_">-f</span> <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/task.xml  <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT/WEB-INF/classes/task.xml</div><div class="line">cp <span class="_">-f</span> <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/sms.properties  <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT/WEB-INF/classes/sms.properties</div><div class="line">cp <span class="_">-f</span> <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/consumer.properties  <span class="variable">$&#123;WEBAPPS_DIR&#125;</span>/ROOT/WEB-INF/classes/consumer.properties</div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$TOMCAT_PORT</span>"</span> == <span class="string">"18000"</span> ]</div><div class="line"><span class="keyword">then</span></div><div class="line">   rm -rf <span class="variable">$WEBAPPS_DIR</span>/ROOT/ueditor/jsp/upload/* </div><div class="line">   mkdir -p <span class="variable">$WEBAPPS_DIR</span>/ROOT/ueditor/jsp/upload</div><div class="line">   cp -rf <span class="variable">$UPLOAD_BAK_DIR</span>/*  <span class="variable">$WEBAPPS_DIR</span>/ROOT/ueditor/jsp/upload/</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">chown -R tomcat.tomcat <span class="variable">$WEBAPPS_DIR</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"Startup Tomcat <span class="variable">$TOMCAT_PORT</span> instance ..."</span></div><div class="line">sudo -u tomcat sh <span class="variable">$&#123;BIN_DIR&#125;</span>/catalina.sh start</div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"Startup completed !"</span></div><div class="line"></div><div class="line">ps -ef|grep <span class="string">"tomcat<span class="variable">$&#123;TOMCAT_PORT&#125;</span>"</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;软件版本及安装路径&quot;&gt;&lt;a href=&quot;#软件版本及安装路径&quot; class=&quot;headerlink&quot; title=&quot;软件版本及安装路径&quot;&gt;&lt;/a&gt;软件版本及安装路径&lt;/h1&gt;&lt;p&gt;JDK的版本1.7.0_79 &lt;/p&gt;
&lt;p&gt;Tomcat的版本7.0.65&lt;/p&gt;
&lt;p&gt;JDK的安装路径: /gotwo_data/Application &lt;/p&gt;
&lt;p&gt;Tomcat的安装路径: /gotwo_data/Application&lt;/p&gt;
&lt;p&gt;tomcat目录的命名规则:tomcat+对外提供服务的web端口号，比如tomcat18080。 &lt;/p&gt;
&lt;p&gt;Tomcat目录及其内部的子目录和文件权限:&lt;code&gt;chown -R tomcat.tomcat tomcat18080;chmod -R 775 tomcat18080&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="service" scheme="http://www.unix-like.com/categories/service/"/>
    
    
      <category term="tomcat" scheme="http://www.unix-like.com/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>mongodb线上线下同步备份脚步</title>
    <link href="http://www.unix-like.com/2017/06/08/database/mongodb%E7%BA%BF%E4%B8%8A%E7%BA%BF%E4%B8%8B%E5%90%8C%E6%AD%A5%E5%A4%87%E4%BB%BD%E8%84%9A%E6%AD%A5/"/>
    <id>http://www.unix-like.com/2017/06/08/database/mongodb线上线下同步备份脚步/</id>
    <published>2017-06-08T02:00:28.000Z</published>
    <updated>2017-06-08T02:03:05.178Z</updated>
    
    <content type="html"><![CDATA[<p>同步线上线下mongodb。</p>
<a id="more"></a>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#bin/bash</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">restore</span></span>()&#123;</div><div class="line">	FILE=`/usr/bin/rsync --port 40004 --list-only --password-file=/etc/rsyncd.secrets backup@<span class="variable">$1</span>::mongodb_backup/ | 	  /usr/bin/tail -1 | /bin/awk <span class="string">'&#123;print $5&#125;'</span>`</div><div class="line">	PATH=/gotwo_data/backup/mongodb</div><div class="line">	DATE=`/bin/date +%F`</div><div class="line">	/bin/rm -rf <span class="variable">$&#123;PATH&#125;</span>/<span class="variable">$2</span>/*</div><div class="line">	/usr/bin/rsync -avz --port 40004 --password-file=/etc/rsyncd.secrets backup@<span class="variable">$1</span>::mongodb_backup/<span class="variable">$&#123;FILE&#125;</span> <span class="variable">$&#123;PATH&#125;</span>/<span class="variable">$2</span>/</div><div class="line"></div><div class="line">	/usr/bin/mongorestore <span class="_">-d</span> <span class="variable">$2</span> --drop --gzip  <span class="variable">$&#123;PATH&#125;</span>/<span class="variable">$2</span>/<span class="variable">$&#123;DATE&#125;</span>/<span class="variable">$2</span>/</div><div class="line">&#125;</div><div class="line"></div><div class="line">restore 114.114.114.114  db_name</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;同步线上线下mongodb。&lt;/p&gt;
    
    </summary>
    
      <category term="database" scheme="http://www.unix-like.com/categories/database/"/>
    
    
      <category term="mongodb" scheme="http://www.unix-like.com/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>mysql线上线下同步备份脚步</title>
    <link href="http://www.unix-like.com/2017/06/08/database/mysql%E7%BA%BF%E4%B8%8A%E7%BA%BF%E4%B8%8B%E5%90%8C%E6%AD%A5%E5%A4%87%E4%BB%BD%E8%84%9A%E6%AD%A5/"/>
    <id>http://www.unix-like.com/2017/06/08/database/mysql线上线下同步备份脚步/</id>
    <published>2017-06-08T01:39:35.000Z</published>
    <updated>2017-06-08T02:31:43.753Z</updated>
    
    <content type="html"><![CDATA[<p>将线上多个数据库同步并导入到线下一个数据库中。</p>
<a id="more"></a>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment"># 本地mysql数据库登录账号</span></div><div class="line">user=<span class="string">'xxx'</span></div><div class="line"><span class="comment"># 本地mysql数据库登录密码</span></div><div class="line">pass=<span class="string">'xxx'</span></div><div class="line"></div><div class="line"><span class="comment"># db_test1库</span></div><div class="line">db1=<span class="string">'db_test1'</span></div><div class="line"></div><div class="line"><span class="comment"># db_test2库</span></div><div class="line">db2=<span class="string">'db_test2'</span></div><div class="line"></div><div class="line"><span class="comment"># db_test3库</span></div><div class="line">db3=<span class="string">'db_test3'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 数据库在线上的备份服务器IP </span></div><div class="line">server1=<span class="string">'1.1.1.1'</span></div><div class="line">server2=<span class="string">'2.2.2.2'</span></div><div class="line"></div><div class="line"><span class="comment"># 删除老数据库备份，下载最新数据库备份</span></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">rsync_db</span></span>() &#123;</div><div class="line">  showMsg <span class="string">"开始同步数据库<span class="variable">$2</span>..."</span></div><div class="line">  file=`rsync --port 30004 --list-only --password-file=/etc/rsync.passwd backup@<span class="variable">$1</span>::mysql_backup/<span class="variable">$2</span>/ | tail -1 | awk <span class="string">'&#123;print $5&#125;'</span>`</div><div class="line">  path=<span class="string">"/gotwo_data/backup/mysql/<span class="variable">$2</span>/"</span></div><div class="line"></div><div class="line">  <span class="keyword">if</span> [ ! <span class="_">-f</span> <span class="variable">$&#123;path&#125;</span><span class="variable">$&#123;file&#125;</span> ]</div><div class="line">  <span class="keyword">then</span></div><div class="line">    showMsg <span class="string">"删除老数据库备份..."</span></div><div class="line">    rm <span class="variable">$&#123;path&#125;</span>*.* 2&gt;/dev/null</div><div class="line">    showMsg <span class="string">"下载最新的数据库备份..."</span></div><div class="line">    rsync -av --port 30004 --password-file=/etc/rsync.passwd backup@<span class="variable">$1</span>::mysql_backup/<span class="variable">$2</span>/<span class="variable">$&#123;file&#125;</span> <span class="variable">$&#123;path&#125;</span></div><div class="line"></div><div class="line">  <span class="keyword">else</span></div><div class="line">    showMsg <span class="variable">$&#123;path&#125;</span><span class="variable">$&#123;file&#125;</span><span class="string">"文件已存在！"</span></div><div class="line">  <span class="keyword">fi</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#导入数据库</span></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">restore_db</span></span>() &#123;</div><div class="line">    showMsg <span class="string">"开始同步数据库<span class="variable">$1</span>..."</span></div><div class="line">    file=`ls /gotwo_data/backup/mysql/<span class="variable">$1</span>`</div><div class="line">    path=<span class="string">"/gotwo_data/backup/mysql/<span class="variable">$1</span>/"</span></div><div class="line"></div><div class="line">    showMsg <span class="string">"将最新的<span class="variable">$&#123;1&#125;</span>数据库备份导入测试数据库..."</span></div><div class="line">    gzip <span class="_">-d</span> &lt; <span class="variable">$&#123;path&#125;</span><span class="variable">$&#123;file&#125;</span> | mysql -u<span class="variable">$&#123;user&#125;</span> -p<span class="variable">$&#123;pass&#125;</span> --socket=/gotwo_data/mysql/my40003/socket/mysqld.sock <span class="variable">$1</span> 2&gt;/dev/null</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment"># 格式化输出日志</span></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">showMsg</span></span>() &#123;</div><div class="line">  <span class="built_in">echo</span> <span class="string">"`date +%Y-%m-%d\ %H:%M:%S`    <span class="variable">$1</span>"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">showMsg <span class="string">"开始同步数据库！"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># db_test1同步</span></div><div class="line">rsync_db <span class="variable">$server1</span> <span class="variable">$db1</span></div><div class="line"></div><div class="line"><span class="comment"># db_test2同步</span></div><div class="line">rsync_db <span class="variable">$server1</span> <span class="variable">$db2</span></div><div class="line"></div><div class="line"><span class="comment"># db_test3同步</span></div><div class="line">rsync_db <span class="variable">$server2</span> <span class="variable">$db3</span></div><div class="line"></div><div class="line">showMsg <span class="string">"开始导入数据库！"</span></div><div class="line"></div><div class="line"><span class="comment"># db_test1导入</span></div><div class="line">restore_db db_test1 &amp;</div><div class="line"></div><div class="line"><span class="comment"># db_test2 导入</span></div><div class="line">restore_db db_test2 &amp;</div><div class="line"></div><div class="line"><span class="comment"># db_test3导入</span></div><div class="line">restore_db db_test3 &amp;</div><div class="line"></div><div class="line">showMsg <span class="string">"备份恢复脚本执行完成！"</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将线上多个数据库同步并导入到线下一个数据库中。&lt;/p&gt;
    
    </summary>
    
      <category term="database" scheme="http://www.unix-like.com/categories/database/"/>
    
    
      <category term="mysql" scheme="http://www.unix-like.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Linux服务器iptables配置</title>
    <link href="http://www.unix-like.com/2017/06/07/service/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8iptables%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.unix-like.com/2017/06/07/service/Linux服务器iptables配置/</id>
    <published>2017-06-07T07:21:08.000Z</published>
    <updated>2017-06-07T07:41:25.486Z</updated>
    
    <content type="html"><![CDATA[<p>一些工作中用到的防火墙规则样例。</p>
<a id="more"></a>
<h1 id="防火墙规则示例脚本"><a href="#防火墙规则示例脚本" class="headerlink" title="防火墙规则示例脚本"></a>防火墙规则示例脚本</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line">IPTABLES=/sbin/iptables</div><div class="line">MODPROBE=/sbin/modprobe</div><div class="line"></div><div class="line"><span class="comment"># IP4</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"[+] Flushing existing <span class="variable">$IPTABLES</span> rules..."</span></div><div class="line"><span class="variable">$IPTABLES</span> -F</div><div class="line"><span class="variable">$IPTABLES</span> -F -t nat</div><div class="line"><span class="variable">$IPTABLES</span> -X</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -P INPUT DROP</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -P OUTPUT DROP</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -P FORWARD DROP</div><div class="line"></div><div class="line"><span class="comment"># load connection-tracking modules</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"[+] Modprode iptables modle..."</span></div><div class="line"><span class="variable">$MODPROBE</span> ip_conntrack</div><div class="line"><span class="variable">$MODPROBE</span> iptable_nat</div><div class="line"><span class="variable">$MODPROBE</span> ip_conntrack_ftp</div><div class="line"><span class="variable">$MODPROBE</span> ip_nat_ftp</div><div class="line"></div><div class="line"><span class="comment"># IP4</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"[+] Setting up OUTPUT chain..."</span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT -i lo -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT -o lo -j ACCEPT</div><div class="line"></div><div class="line"><span class="comment"># ping limit</span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT -p icmp  -m state --state NEW,ESTABLISHED,RELATED  -m icmp --icmp-type <span class="built_in">echo</span>-request    -m <span class="built_in">limit</span> --limit 10/second  -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT -p icmp  -m state --state NEW,ESTABLISHED,RELATED  -m icmp --icmp-type <span class="built_in">echo</span>-reply    -m <span class="built_in">limit</span> --limit 10/second  -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED,RELATED    -j ACCEPT</div><div class="line"></div><div class="line"><span class="comment"># SSH PORT</span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT -p tcp  --dport 60021 -m state --state NEW,ESTABLISHED  -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT -p tcp  --sport 60021 -m state --state ESTABLISHED -j ACCEPT</div><div class="line"></div><div class="line"><span class="comment"># QQ MAIL SMTP PORT</span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT -p tcp  --dport 465 -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT -p tcp  --dport 465 -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT -p tcp  --sport 25  -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT -p tcp  --dport 25 -j ACCEPT</div><div class="line"></div><div class="line"><span class="comment"># MYSQL</span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT  -p tcp -m tcp <span class="_">-s</span> 113.207.31.47 --dport 41003 -m state --state NEW,ESTABLISHED -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT  -p tcp -m tcp <span class="_">-d</span> 113.207.31.47  --sport 41003 -m state --state NEW,ESTABLISHED -j ACCEPT</div><div class="line"></div><div class="line"><span class="comment"># REDISS</span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT  -p tcp -m tcp <span class="_">-s</span> 12.4.25.22 --dport 6379 -m state --state NEW,ESTABLISHED -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT  -p tcp -m tcp <span class="_">-d</span> 12.4.25.22 --sport 6379 -m state --state ESTABLISHED -j ACCEPT</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># TAOBAO api</span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT  -p tcp -m tcp <span class="_">-s</span> 122.199.160.211 -m state --state NEW,ESTABLISHED -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT  -p tcp -m tcp <span class="_">-d</span> 122.199.160.211 -m state --state NEW,ESTABLISHED -j ACCEPT</div><div class="line"></div><div class="line"><span class="comment"># zabbix</span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT  -p tcp -m tcp <span class="_">-s</span> 119.119.119.119 --dport 10050 -m state --state NEW,ESTABLISHED -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT  -p tcp -m tcp <span class="_">-d</span> 119.119.119.119 --sport 10050 -m state --state ESTABLISHED -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT  -p tcp -m tcp <span class="_">-s</span> 119.119.119.119 --sport 10051 -m state --state ESTABLISHED -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT  -p tcp -m tcp <span class="_">-d</span> 119.119.119.119 --dport 10051 -m state --state NEW,ESTABLISHED -j ACCEPT</div><div class="line"></div><div class="line"><span class="comment"># web port</span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT -p tcp -m state --state NEW,ESTABLISHED -m multiport --destination-port  80,443 -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT -p tcp -m state --state ESTABLISHED -m multiport --source-port  80,443 -j ACCEPT</div><div class="line"></div><div class="line"></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -m multiport --destination-port  80,443 -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT -p tcp -m state --state ESTABLISHED -m multiport --source-port  80,443 -j ACCEPT</div><div class="line"></div><div class="line"><span class="comment"># DNS </span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT -p udp -m state --state ESTABLISHED  --sport 53 -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT -p udp -m state --state NEW,ESTABLISHED --dport 53 -j ACCEPT</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># NTP TIME SYNC</span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT  -p udp -m state --state ESTABLISHED --sport 123  -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT -p udp -m state --state NEW,ESTABLISHED --dport 123  -j ACCEPT</div><div class="line"></div><div class="line"><span class="comment">#limit syn foold</span></div><div class="line"><span class="variable">$IPTABLES</span> -t filter  -A INPUT -p tcp --syn -m <span class="built_in">limit</span> --limit 2048/s -j ACCEPT</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">##############Iptables save and restart</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Iptables save and restart ..."</span></div><div class="line">/etc/init.d/iptables  save</div><div class="line">/etc/init.d/iptables restart</div></pre></td></tr></table></figure>
<h1 id="防火墙debug脚本"><a href="#防火墙debug脚本" class="headerlink" title="防火墙debug脚本"></a>防火墙debug脚本</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">IPTABLES=/sbin/iptables</div><div class="line">MODPROBE=/sbin/modprobe</div><div class="line"></div><div class="line"><span class="comment">####IP4</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"[+] Flushing existing <span class="variable">$IPTABLES</span> rules..."</span></div><div class="line"><span class="variable">$IPTABLES</span> -F</div><div class="line"><span class="variable">$IPTABLES</span> -F -t nat</div><div class="line"><span class="variable">$IPTABLES</span> -X</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -P INPUT ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -P OUTPUT ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -P FORWARD ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A INPUT -p udp -m state --state ESTABLISHED  --sport 53 -j ACCEPT</div><div class="line"><span class="variable">$IPTABLES</span> -t filter -A OUTPUT -p udp -m state --state NEW,ESTABLISHED --dport 53 -j ACCEPT</div><div class="line"></div><div class="line"><span class="comment">##############Iptables save and restart</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"Iptables save and restart ..."</span></div><div class="line">/etc/init.d/iptables   save</div><div class="line">/etc/init.d/iptables  restart</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些工作中用到的防火墙规则样例。&lt;/p&gt;
    
    </summary>
    
      <category term="service" scheme="http://www.unix-like.com/categories/service/"/>
    
    
      <category term="iptables" scheme="http://www.unix-like.com/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 15.04 上配置 OpenVPN 服务器和客户端</title>
    <link href="http://www.unix-like.com/2017/06/06/service/%E5%9C%A8Ubuntu15.04%E4%B8%8A%E9%85%8D%E7%BD%AEOpenVPN%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%92%8C%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    <id>http://www.unix-like.com/2017/06/06/service/在Ubuntu15.04上配置OpenVPN服务器和客户端/</id>
    <published>2017-06-06T05:40:43.000Z</published>
    <updated>2017-06-06T06:34:28.042Z</updated>
    
    <content type="html"><![CDATA[<p>　　虚拟专用网（VPN）常指几种通过其它网络建立连接技术。它之所以被称为“虚拟”，是因为各个节点间的连接不是通过物理线路实现的，而“专用”是指如果没有网络所有者的正确授权是不能被公开访问到。</p>
<a id="more"></a>
<p>　　OpenVPN软件借助TUN/TAP驱动使用TCP和UDP协议来传输数据。UDP协议和TUN驱动允许NAT后的用户建立到OpenVPN服务器的连接。此外，OpenVPN允许指定自定义端口。它提供了更多的灵活配置，可以帮助你避免防火墙限制。</p>
<p>　　OpenVPN中，由OpenSSL库和传输层安全协议（TLS）提供了安全和加密。TLS是SSL协议的一个改进版本。</p>
<p>　　OpenSSL提供了两种加密方法：对称和非对称。下面，我们展示了如何配置OpenVPN的服务器端，以及如何配置使用带有公共密钥基础结构（PKI）的非对称加密和TLS协议。</p>
<h1 id="服务器端配置"><a href="#服务器端配置" class="headerlink" title="服务器端配置"></a>服务器端配置</h1><p>　　首先，我们必须安装OpenVPN软件。在Ubuntu 15.04和其它带有‘apt’包管理器的Unix系统中，可以通过如下命令安装：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install openvpn</div></pre></td></tr></table></figure>
<p>　　然后，我们必须配置一个密钥对，这可以通过默认的“openssl”工具完成。但是，这种方式十分难。这也是我们使用“easy-rsa”来实现此目的的原因。接下来的命令会将“easy-rsa”安装到系统中。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install easy-rsa</div></pre></td></tr></table></figure>
<p>　　<strong>注意</strong>： 所有接下来的命令要以超级用户权限执行，如在使用<code>sudo -i</code>命令后执行，或者你可以使用<code>sudo -E</code>作为接下来所有命令的前缀。</p>
<p>　　开始之前，我们需要拷贝“easy-rsa”到openvpn文件夹。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir /etc/openvpn/easy-rsa</div><div class="line">cp -r /usr/share/easy-rsa /etc/openvpn/easy-rsa</div><div class="line">mv /etc/openvpn/easy-rsa/easy-rsa /etc/openvpn/easy-rsa/2.0</div></pre></td></tr></table></figure>
<p>　　然后进入到该目录</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /etc/openvpn/easy-rsa/2.0</div></pre></td></tr></table></figure>
<p>　　这里，我们开始密钥生成进程。</p>
<p>　　首先，我们编辑一个“vars”文件。为了简化生成过程，我们需要在里面指定数据。这里是“vars”文件的一个样例：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> KEY_COUNTRY=<span class="string">"CN"</span></div><div class="line"><span class="built_in">export</span> KEY_PROVINCE=<span class="string">"BJ"</span></div><div class="line"><span class="built_in">export</span> KEY_CITY=<span class="string">"Beijing"</span></div><div class="line"><span class="built_in">export</span> KEY_ORG=<span class="string">"Linux.CN"</span></div><div class="line"><span class="built_in">export</span> KEY_EMAIL=<span class="string">"open@vpn.linux.cn"</span></div><div class="line"><span class="built_in">export</span> KEY_OU=server</div></pre></td></tr></table></figure>
<p>　　希望这些字段名称对你而言已经很清楚，不需要进一步说明了。</p>
<p>　　其次，我们需要拷贝openssl配置。另外一个版本已经有现成的配置文件，如果你没有特定要求，你可以使用它的上一个版本。这里是1.0.0版本。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp openssl-1.0.0.cnf openssl.cnf</div></pre></td></tr></table></figure>
<p>　　第三，我们需要加载环境变量，这些变量已经在前面一步中编辑好了。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> ./vars</div></pre></td></tr></table></figure>
<p>　　生成密钥的最后一步准备工作是清空旧的证书和密钥，以及生成新密钥的序列号和索引文件。可以通过以下命令完成。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./clean-all</div></pre></td></tr></table></figure>
<p>　　现在，我们完成了准备工作，准备好启动生成进程了。让我们先来生成证书。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./build-ca</div></pre></td></tr></table></figure>
<p>　　在对话中，我们可以看到默认的变量，这些变量是我们先前在“vars”中指定的。我们可以检查一下，如有必要进行编辑，然后按回车几次。对话如下</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">Generating a 2048 bit RSA private key</div><div class="line">.............................................+++</div><div class="line">...................................................................................................+++</div><div class="line">writing new private key to <span class="string">'ca.key'</span></div><div class="line">-----</div><div class="line">You are about to be asked to enter information that will be incorporated</div><div class="line">into your certificate request.</div><div class="line">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class="line">There are quite a few fields but you can leave some blank</div><div class="line">For some fields there will be a default value,</div><div class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</div><div class="line">-----</div><div class="line">Country Name (2 letter code) [CN]:</div><div class="line">State or Province Name (full name) [BJ]:</div><div class="line">Locality Name (eg, city) [Beijing]:</div><div class="line">Organization Name (eg, company) [Linux.CN]:</div><div class="line">Organizational Unit Name (eg, section) [Tech]:</div><div class="line">Common Name (eg, your name or your server<span class="string">'s hostname) [Linux.CN CA]:</span></div><div class="line">Name [EasyRSA]:</div><div class="line">Email Address [open@vpn.linux.cn]:</div></pre></td></tr></table></figure>
<p>　　接下来，我们需要生成一个服务器密钥</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./build-key-server server</div></pre></td></tr></table></figure>
<p>　　该命令的对话如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">Generating a 2048 bit RSA private key</div><div class="line">........................................................................+++</div><div class="line">............................+++</div><div class="line">writing new private key to <span class="string">'server.key'</span></div><div class="line">-----</div><div class="line">You are about to be asked to enter information that will be incorporated</div><div class="line">into your certificate request.</div><div class="line">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class="line">There are quite a few fields but you can leave some blank</div><div class="line">For some fields there will be a default value,</div><div class="line">If you enter <span class="string">'.'</span>, the field will be left blank.</div><div class="line">-----</div><div class="line">Country Name (2 letter code) [CN]:</div><div class="line">State or Province Name (full name) [BJ]:</div><div class="line">Locality Name (eg, city) [Beijing]:</div><div class="line">Organization Name (eg, company) [Linux.CN]:</div><div class="line">Organizational Unit Name (eg, section) [Tech]:</div><div class="line">Common Name (eg, your name or your server<span class="string">'s hostname) [Linux.CN server]:</span></div><div class="line">Name [EasyRSA]:</div><div class="line">Email Address [open@vpn.linux.cn]:</div><div class="line">Please enter the following 'extra<span class="string">' attributes</span></div><div class="line">to be sent with your certificate request</div><div class="line">A challenge password []:</div><div class="line">An optional company name []:</div><div class="line">Using configuration from /etc/openvpn/easy-rsa/2.0/openssl-1.0.0.cnf</div><div class="line">Check that the request matches the signature</div><div class="line">Signature ok</div><div class="line">The Subject's Distinguished Name is as follows</div><div class="line">countryName :PRINTABLE:<span class="string">'CN'</span></div><div class="line">stateOrProvinceName :PRINTABLE:<span class="string">'BJ'</span></div><div class="line">localityName :PRINTABLE:<span class="string">'Beijing'</span></div><div class="line">organizationName :PRINTABLE:<span class="string">'Linux.CN'</span></div><div class="line">organizationalUnitName:PRINTABLE:<span class="string">'Tech'</span></div><div class="line">commonName :PRINTABLE:<span class="string">'Linux.CN server'</span></div><div class="line">name :PRINTABLE:<span class="string">'EasyRSA'</span></div><div class="line">emailAddress :IA5STRING:<span class="string">'open@vpn.linux.cn'</span></div><div class="line">Certificate is to be certified until May 22 19:00:25 2025 GMT (3650 days)</div><div class="line">Sign the certificate? [y/n]:y</div><div class="line">1 out of 1 certificate requests certified, commit? [y/n]y</div><div class="line">Write out database with 1 new entries</div><div class="line">Data Base Updated</div></pre></td></tr></table></figure>
<p>　　这里，最后两个关于“签署证书”和“提交”的问题，我们必须回答“yes”。</p>
<p>　　现在，我们已经有了证书和服务器密钥。下一步，就是去省城Diffie-Hellman密钥。执行以下命令，耐心等待。在接下来的几分钟内，我们将看到许多点和加号。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./build-dh</div></pre></td></tr></table></figure>
<p>　　该命令的输出样例如下</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Generating DH parameters, 2048 bit long safe prime, generator 2</div><div class="line">This is going to take a long time</div><div class="line">................................+................&lt;许多的点&gt;</div></pre></td></tr></table></figure>
<p>　　在漫长的等待之后，我们可以继续生成最后的密钥了，该密钥用于TLS验证。命令如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openvpn --genkey --secret keys/ta.key</div></pre></td></tr></table></figure>
<p>　　现在，生成完毕，我们可以移动所有生成的文件到最后的位置中。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp -r /etc/openvpn/easy-rsa/2.0/keys/ /etc/openvpn/</div></pre></td></tr></table></figure>
<p>　　最后，我们来创建OpenVPN配置文件。让我们从样例中拷贝过来吧：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz /etc/openvpn/</div><div class="line"><span class="built_in">cd</span> /etc/openvpn</div><div class="line">gunzip <span class="_">-d</span> /etc/openvpn/server.conf.gz</div></pre></td></tr></table></figure>
<p>　　然后编辑</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/openvpn/server.conf</div></pre></td></tr></table></figure>
<p>　　我们需要指定密钥的自定义路径</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ca /etc/openvpn/keys/ca.crt</div><div class="line">cert /etc/openvpn/keys/server.crt</div><div class="line">key /etc/openvpn/keys/server.key <span class="comment"># This file should be kept secret</span></div><div class="line">dh /etc/openvpn/keys/dh2048.pem</div></pre></td></tr></table></figure>
<p>　　一切就绪。在重启OpenVPN后，服务器端配置就完成了。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service openvpn restart</div></pre></td></tr></table></figure>
<h1 id="Unix的客户端配置"><a href="#Unix的客户端配置" class="headerlink" title="Unix的客户端配置"></a>Unix的客户端配置</h1><p>　　假定我们有一台装有类Unix操作系统的设备，比如Ubuntu 15.04，并安装有OpenVPN。我们想要连接到前面建立的OpenVPN服务器。首先，我们需要为客户端生成密钥。为了生成该密钥，请转到服务器上的对应目录中：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /etc/openvpn/easy-rsa/2.0</div></pre></td></tr></table></figure>
<p>　　加载环境变量</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> vars</div></pre></td></tr></table></figure>
<p>　　然后创建客户端密钥</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./build-key client</div></pre></td></tr></table></figure>
<p>　　我们将看到一个与先前关于服务器密钥生成部分的章节描述一样的对话，填入客户端的实际信息。</p>
<p>　　如果需要密码保护密钥，你需要运行另外一个命令，命令如下</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./build-key-pass client</div></pre></td></tr></table></figure>
<p>　　在此种情况下，在建立VPN连接时，会提示你输入密码。</p>
<p>　　现在，我们需要将以下文件从服务器拷贝到客户端/etc/openvpn/keys/文件夹。</p>
<p>　　服务器文件列表：</p>
<ul>
<li>ca.crt,</li>
<li>dh2048.pem,</li>
<li>client.crt,</li>
<li>client.key,</li>
<li>ta.key.</li>
</ul>
<p>　　在此之后，我们转到客户端，准备配置文件。配置文件位于/etc/openvpn/client.conf，内容如下</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">dev tun</div><div class="line">proto udp</div><div class="line"></div><div class="line"><span class="comment"># 远程 OpenVPN 服务器的 IP 和 端口号</span></div><div class="line">remote 111.222.333.444 1194</div><div class="line"></div><div class="line">resolv-retry infinite</div><div class="line"></div><div class="line">ca /etc/openvpn/keys/ca.crt</div><div class="line">cert /etc/openvpn/keys/client.crt</div><div class="line">key /etc/openvpn/keys/client.key</div><div class="line">tls-client</div><div class="line">tls-auth /etc/openvpn/keys/ta.key 1</div><div class="line">auth SHA1</div><div class="line">cipher BF-CBC</div><div class="line">remote-cert-tls server</div><div class="line">comp-lzo</div><div class="line">persist-key</div><div class="line">persist-tun</div><div class="line"></div><div class="line">status openvpn-status.log</div><div class="line"><span class="built_in">log</span> /var/<span class="built_in">log</span>/openvpn.log</div><div class="line">verb 3</div><div class="line">mute 20</div></pre></td></tr></table></figure>
<p>　　在此之后，我们需要重启OpenVPN以接受新配置。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service openvpn restart</div></pre></td></tr></table></figure>
<p>　　好了，客户端配置完成。</p>
<p>#安卓客户端配置</p>
<p>　　安卓设备上的OpenVPN配置和Unix系统上的十分类似，我们需要一个含有配置文件、密钥和证书的包。文件列表如下：</p>
<ul>
<li>配置文件 (扩展名 .ovpn),</li>
<li>ca.crt,</li>
<li>dh2048.pem,</li>
<li>client.crt,</li>
<li>client.key.</li>
</ul>
<p>　　客户端密钥生成方式和先前章节所述的一样。</p>
<p>　　配置文件内容如下</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">client tls-client</div><div class="line">dev tun</div><div class="line">proto udp</div><div class="line"></div><div class="line"><span class="comment"># 远程 OpenVPN 服务器的 IP 和 端口号</span></div><div class="line">remote 111.222.333.444 1194</div><div class="line"></div><div class="line">resolv-retry infinite</div><div class="line">nobind</div><div class="line">ca ca.crt</div><div class="line">cert client.crt</div><div class="line">key client.key</div><div class="line">dh dh2048.pem</div><div class="line">persist-tun</div><div class="line">persist-key</div><div class="line"></div><div class="line">verb 3</div><div class="line">mute 20</div></pre></td></tr></table></figure>
<p>　　所有这些文件我们必须移动我们设备的SD卡上。</p>
<p>　　然后，我们需要安装一个OpenVPN Connect 应用。</p>
<p>　　接下来，配置过程很是简单：</p>
<ul>
<li>打开 OpenVPN 并选择“Import”选项</li>
<li>选择“Import Profile from SD card”</li>
<li>在打开的窗口中导航到我们放置好文件的目录，并选择那个 .ovpn 文件</li>
<li>应用会要求我们创建一个新的配置文件</li>
<li>点击“Connect”按钮并稍等一下</li>
</ul>
<p>　　搞定。现在，我们的安卓设备已经通过安全的VPN连接连接到我们的专用网。</p>
<h1 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h1><p>　　虽然OpenVPN初始配置花费不少时间，但是简易的客户端配置为我们弥补了时间上的损失，也提供了从任何设备连接的能力。此外，OpenVPN提供了一个很高的安全等级，以及从不同地方连接的能力，包括位于NAT后面的客户端。因此，OpenVPN可以同时在家和企业中使用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　虚拟专用网（VPN）常指几种通过其它网络建立连接技术。它之所以被称为“虚拟”，是因为各个节点间的连接不是通过物理线路实现的，而“专用”是指如果没有网络所有者的正确授权是不能被公开访问到。&lt;/p&gt;
    
    </summary>
    
      <category term="service" scheme="http://www.unix-like.com/categories/service/"/>
    
    
      <category term="openvpn" scheme="http://www.unix-like.com/tags/openvpn/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下OpenVPN客户端配置</title>
    <link href="http://www.unix-like.com/2017/06/06/service/Ubuntu%E4%B8%8BOpenVPN%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.unix-like.com/2017/06/06/service/Ubuntu下OpenVPN客户端配置/</id>
    <published>2017-06-06T05:37:35.000Z</published>
    <updated>2017-06-06T05:39:23.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装OpenVPN"><a href="#安装OpenVPN" class="headerlink" title="安装OpenVPN"></a>安装OpenVPN</h1><p>　　首先需要安装OpenVPN客户端。一般来说直接使用apt-get即可。执行如下命令安装：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@www ~]<span class="comment"># apt-get install openvpn</span></div></pre></td></tr></table></figure>
<p>　　稍等片刻将自动安装好openvpn需要的软件包。安装完成后，应该出现 <code>/etc/openvpn/</code> 文件夹。 </p>
<a id="more"></a>
<h1 id="配置OpenVPN"><a href="#配置OpenVPN" class="headerlink" title="配置OpenVPN"></a>配置OpenVPN</h1><p>　　作为客户端，OpenVPN并没有特定的配置文件，而是由服务器提供方给出一个配置文件。对于认证，OpenVPN提供了两种认证方法：基于用户名/密码的认证与SSL证书认证。用户名/密码的认证方法无法（或较难）限制一个账号同时连接多个客户端，而采用证书，则可保证同一证书同一时间只能有一个 客户端连接。当然，这些都是由服务器端决定的，不需要客户端进行选择。</p>
<p>　　首先将OpenVPN服务器提供商发给你的配置文件解压，并将所有文件都复制到 /etc/openvpn/中。</p>
<p>这些文件中至少包含一个.ovpn文件，需要手动创建该文件，如：client.ovpn；如果服务器需要证书认证，则应该还存在另外三个证书文件。</p>
<p>　　看懂OpenVPN配置格式。下面是一个.ovpn配置示例：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">client</div><div class="line">dev tap</div><div class="line">proto tcp-client</div><div class="line">remote 192.168.135.75 1194</div><div class="line">resolv-retry infinite</div><div class="line">nobind</div><div class="line">mute-replay-warnings</div><div class="line">redirect-gateway</div><div class="line">ca /etc/openvpn/ca.crt</div><div class="line">cert /etc/openvpn/client.crt</div><div class="line">key /etc/openvpn/client.key</div><div class="line">comp-lzo</div><div class="line">verb 4</div></pre></td></tr></table></figure>
<p>　　一般来说，ca.crt，client.crt，client.key可能需要你进行修改。将内容修改成这三个文件的实际位置。然后保存即可。 </p>
<h1 id="连接OpenVPN"><a href="#连接OpenVPN" class="headerlink" title="连接OpenVPN"></a>连接OpenVPN</h1><p>　　在配置好.ovpn文件后，执行</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openvpn /etc/openvpn/client.ovpn</div></pre></td></tr></table></figure>
<p>　　即可连接服务器了（注意该目录下对应文件的权限）。注意，上面的参数应该换成你的配置文件实际位置。</p>
<p>　　此时，终端会回显很多连接日志。如果连接不成功，则可以通过这些日志来确定出错位置。如果要断开，只需要通过Ctrl+C强制终止即可。</p>
<p>　　上面的命令在实际中并不方便，因为它要占用一个独立的终端。在测试成功后，使用以下命令即可在后台连接OpenVPN：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openvpn /etc/openvpn/client.ovpn &gt; /dev/null &amp;</div></pre></td></tr></table></figure>
<p>　　值得称赞的是，openvpn非常智能，在连接异常中断、无法连接服务器、断网的情况下，它会自动重连。因此，如果希望开机即自动连接OpenVPN，或者是VPN常年在线，则可将上述命令行加入 <code>/etc/rc.local</code> 中。注意，命令末尾的&amp;符号不能省略，否则将可能阻塞系统的正常启动。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装OpenVPN&quot;&gt;&lt;a href=&quot;#安装OpenVPN&quot; class=&quot;headerlink&quot; title=&quot;安装OpenVPN&quot;&gt;&lt;/a&gt;安装OpenVPN&lt;/h1&gt;&lt;p&gt;　　首先需要安装OpenVPN客户端。一般来说直接使用apt-get即可。执行如下命令安装：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@www ~]&lt;span class=&quot;comment&quot;&gt;# apt-get install openvpn&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;　　稍等片刻将自动安装好openvpn需要的软件包。安装完成后，应该出现 &lt;code&gt;/etc/openvpn/&lt;/code&gt; 文件夹。 &lt;/p&gt;
    
    </summary>
    
      <category term="service" scheme="http://www.unix-like.com/categories/service/"/>
    
    
      <category term="openvpn" scheme="http://www.unix-like.com/tags/openvpn/"/>
    
  </entry>
  
  <entry>
    <title>kvm部署及虚拟机安装</title>
    <link href="http://www.unix-like.com/2017/06/04/service/KVM%E9%83%A8%E7%BD%B2%E5%8F%8A%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/"/>
    <id>http://www.unix-like.com/2017/06/04/service/KVM部署及虚拟机安装/</id>
    <published>2017-06-04T11:20:33.000Z</published>
    <updated>2017-06-04T11:25:21.711Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-KVM安装"><a href="#一-KVM安装" class="headerlink" title="一. KVM安装"></a>一. KVM安装</h1><h2 id="1-查看硬件是否支持虚拟化"><a href="#1-查看硬件是否支持虚拟化" class="headerlink" title="1. 查看硬件是否支持虚拟化"></a>1. 查看硬件是否支持虚拟化</h2><p>　　KVM需要CPU支持虚拟化，执行以下命令查看是否支持虚拟化：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">egrep <span class="string">'(vmx|svm)'</span> --color=always /proc/cpuinfo</div></pre></td></tr></table></figure>
<p>　　如果含有vmx或者svm字样，则表示支持CPU虚拟化，</p>
<p>　　Intel是vmx，AMD是svm。</p>
<a id="more"></a>
<h2 id="2-安装KVM"><a href="#2-安装KVM" class="headerlink" title="2. 安装KVM"></a>2. 安装KVM</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install qemu-kvm qemu-img libvirt libvirt-python libguestfs-tools virt-install</div></pre></td></tr></table></figure>
<p>　　<strong>qemu-kvm</strong> 是一个开源的虚拟机程序，为 KVM 虚拟机监视器提供硬件仿真，而 qemu-img 则提供了一个操纵磁盘镜像的命令行工具。</p>
<p>　　<strong>libvirt</strong> 包含与操作系统的虚拟化功能交互的工具。</p>
<p>　　<strong>libvirt-python</strong> 包含一个模块，它允许用 Python 写的应用来使用由 libvirt 提供的接口。</p>
<p>　　<strong>libguestfs-tools</strong> 包含各式各样的针对虚拟机的系统管理员命令行工具。</p>
<p>　　<strong>virt-install</strong> 包含针对虚拟机管理的其他命令行工具。</p>
<h3 id="2-1-启动并开启了-libvirtd-服务"><a href="#2-1-启动并开启了-libvirtd-服务" class="headerlink" title="2.1. 启动并开启了 libvirtd 服务"></a>2.1. 启动并开启了 libvirtd 服务</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/libvirtd start</div><div class="line"></div><div class="line">chkconfig libvirtd on</div></pre></td></tr></table></figure>
<h3 id="2-2-配置转发"><a href="#2-2-配置转发" class="headerlink" title="2.2. 配置转发"></a>2.2. 配置转发</h3><p>　　文件/etc/sysctl.conf 中设置：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net.ipv4.ip_forward = 1</div></pre></td></tr></table></figure>
<h3 id="2-3-关闭网桥上的Netfilter-提高性能"><a href="#2-3-关闭网桥上的Netfilter-提高性能" class="headerlink" title="2.3. 关闭网桥上的Netfilter(提高性能)"></a>2.3. 关闭网桥上的Netfilter(提高性能)</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysctl.conf:</div><div class="line"></div><div class="line">    net.bridge.bridge-nf-call-ip6tables = 0</div><div class="line"></div><div class="line">    net.bridge.bridge-nf-call-iptables = 0</div><div class="line"></div><div class="line">    net.bridge.bridge-nf-call-arptables = 0</div></pre></td></tr></table></figure>
<h3 id="2-4-加载更改到当前的内核配置中："><a href="#2-4-加载更改到当前的内核配置中：" class="headerlink" title="2.4. 加载更改到当前的内核配置中："></a>2.4. 加载更改到当前的内核配置中：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sysctl -p</div></pre></td></tr></table></figure>
<h2 id="3-KVM网络配置"><a href="#3-KVM网络配置" class="headerlink" title="3. KVM网络配置"></a>3. KVM网络配置</h2><h3 id="3-1-创建桥接器"><a href="#3-1-创建桥接器" class="headerlink" title="3.1. 创建桥接器"></a>3.1. 创建桥接器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysconfig/network-scripts/ifcfg-br0</div><div class="line"></div><div class="line">    DEVICE=br0</div><div class="line">    NAME=br0</div><div class="line">    NM_CONTROLLED=no</div><div class="line">    TYPE=Bridge     <span class="comment"># 注意Bridge大小写</span></div><div class="line">    ONBOOT=yes</div><div class="line">    BOOTPROTO=none</div><div class="line">    BROADCAST=192.168.2.255</div><div class="line">    IPADDR=192.168.2.7</div><div class="line">    NETMASK=255.255.255.0</div><div class="line">    NETWORK=192.168.2.0</div><div class="line">    GATEWAY=192.168.2.1</div></pre></td></tr></table></figure>
<h3 id="3-2-将物理接口桥接到桥接器"><a href="#3-2-将物理接口桥接到桥接器" class="headerlink" title="3.2. 将物理接口桥接到桥接器"></a>3.2. 将物理接口桥接到桥接器</h3><p>　　修改eth0的内容（本服务器是用eth0上网的），去掉其IP相关信息，加上“BRIDGE=br0”，将其桥接到br0上；如果是双网卡或是多网卡，照此过程修改：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0</div><div class="line"></div><div class="line">    DEVICE=eth0</div><div class="line">    NAME=eth0</div><div class="line">    TYPE=Ethernet</div><div class="line">    NM_CONTROLLED=no</div><div class="line">    ONBOOT=yes</div><div class="line">    BRIDGE=br0</div></pre></td></tr></table></figure>
<h3 id="3-3-重启网络"><a href="#3-3-重启网络" class="headerlink" title="3.3. 重启网络"></a>3.3. 重启网络</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/network restart</div></pre></td></tr></table></figure>
<h1 id="二-安装并配置VNC服务"><a href="#二-安装并配置VNC服务" class="headerlink" title="二. 安装并配置VNC服务"></a>二. 安装并配置VNC服务</h1><h2 id="1-安装VNC"><a href="#1-安装VNC" class="headerlink" title="1. 安装VNC"></a>1. 安装VNC</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install tigervnc tigervnc-server</div></pre></td></tr></table></figure>
<h2 id="2-配置VNC"><a href="#2-配置VNC" class="headerlink" title="2. 配置VNC"></a>2. 配置VNC</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysconfig/vncservers</div><div class="line"></div><div class="line">    VNCSERVERS=<span class="string">"1:root"</span></div><div class="line">    VNCSERVERARGS[2]=<span class="string">"-geometry 800x600 -nolisten tcp -localhost"</span></div></pre></td></tr></table></figure>
<h2 id="3-设置vnc密码"><a href="#3-设置vnc密码" class="headerlink" title="3.设置vnc密码"></a>3.设置vnc密码</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vncpasswd</div></pre></td></tr></table></figure>
<h2 id="4-启动服务"><a href="#4-启动服务" class="headerlink" title="4.启动服务"></a>4.启动服务</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/vncserver start</div><div class="line"></div><div class="line">chkconfig vncserver on</div></pre></td></tr></table></figure>
<h2 id="5-配置QEMU"><a href="#5-配置QEMU" class="headerlink" title="5. 配置QEMU"></a>5. 配置QEMU</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vim /etc/libvirt/qemu.conf</div><div class="line"></div><div class="line">    vnc_listen = <span class="string">"0.0.0.0"</span></div><div class="line"></div><div class="line">    vnc_password = <span class="string">"xxxxx"</span></div></pre></td></tr></table></figure>
<h2 id="6-重启服务"><a href="#6-重启服务" class="headerlink" title="6.重启服务"></a>6.重启服务</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/libvirtd restart</div></pre></td></tr></table></figure>
<h1 id="三-创建虚拟机"><a href="#三-创建虚拟机" class="headerlink" title="三. 创建虚拟机"></a>三. 创建虚拟机</h1><h2 id="1-创建centos虚拟机"><a href="#1-创建centos虚拟机" class="headerlink" title="1. 创建centos虚拟机"></a>1. 创建centos虚拟机</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">virt-install --network bridge=br0 --name=test_centos --ram=2048 --vcpus=2 --disk path=/var/lib/libvirt/images/test_centos.img,size=200 --cdrom /usr/<span class="built_in">local</span>/src/CentOS-6.7-x86_64-minimal.iso --vnc --vncport=5910 --hvm</div></pre></td></tr></table></figure>
<p>　　执行上面命令后通过VNC 连接安装系统</p>
<h2 id="2-创建windows虚拟机"><a href="#2-创建windows虚拟机" class="headerlink" title="2.创建windows虚拟机"></a>2.创建windows虚拟机</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">virt-install --network bridge=br0 --name=test_xp --ram=2048 --vcpus=2 --disk path=/var/lib/libvirt/images/test_xp.img,size=200 --cdrom /usr/<span class="built_in">local</span>/src/Deepin-LiteXP-5.10.iso --vnc --vncport=5920 --os-type=Windows</div></pre></td></tr></table></figure>
<p>　　执行上面命令后通过VNC 连接安装系统</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一-KVM安装&quot;&gt;&lt;a href=&quot;#一-KVM安装&quot; class=&quot;headerlink&quot; title=&quot;一. KVM安装&quot;&gt;&lt;/a&gt;一. KVM安装&lt;/h1&gt;&lt;h2 id=&quot;1-查看硬件是否支持虚拟化&quot;&gt;&lt;a href=&quot;#1-查看硬件是否支持虚拟化&quot; class=&quot;headerlink&quot; title=&quot;1. 查看硬件是否支持虚拟化&quot;&gt;&lt;/a&gt;1. 查看硬件是否支持虚拟化&lt;/h2&gt;&lt;p&gt;　　KVM需要CPU支持虚拟化，执行以下命令查看是否支持虚拟化：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;egrep &lt;span class=&quot;string&quot;&gt;&#39;(vmx|svm)&#39;&lt;/span&gt; --color=always /proc/cpuinfo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;　　如果含有vmx或者svm字样，则表示支持CPU虚拟化，&lt;/p&gt;
&lt;p&gt;　　Intel是vmx，AMD是svm。&lt;/p&gt;
    
    </summary>
    
      <category term="service" scheme="http://www.unix-like.com/categories/service/"/>
    
    
      <category term="kvm" scheme="http://www.unix-like.com/tags/kvm/"/>
    
  </entry>
  
  <entry>
    <title>使用命令行生成高强度密码</title>
    <link href="http://www.unix-like.com/2017/06/02/system/%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%94%9F%E6%88%90%E9%AB%98%E5%BC%BA%E5%BA%A6%E5%AF%86%E7%A0%81/"/>
    <id>http://www.unix-like.com/2017/06/02/system/使用命令行生成高强度密码/</id>
    <published>2017-06-02T01:54:11.000Z</published>
    <updated>2017-06-02T01:55:23.376Z</updated>
    
    <content type="html"><![CDATA[<p>设置一个高强度的密码是非常重要的，这样才能够很好的保护自己的账号或者服务器以及确保自己的数据的安全。通常来说，一个高强度密码至少有 14 个字符，包括大小写字母、数字和特殊字符，并且要牢记永远不用那些字典中的单词。使用长密码比短密码要来的安全，因为密码越长越难猜测。在本文中，我将给你介绍几个不同方法，让你可以在 Linux 命令行下生成一个高强度密码。</p>
<a id="more"></a>
<h1 id="使用-openssl-生成高强度密码"><a href="#使用-openssl-生成高强度密码" class="headerlink" title="使用 openssl 生成高强度密码"></a>使用 openssl 生成高强度密码</h1><p>这里使用 openssl 的 rand 方法，它会生成一个 14 位字符的随机字符：</p>
<pre><code>openssl rand -base64 14
</code></pre><h1 id="使用-urandom-生成高强度密码"><a href="#使用-urandom-生成高强度密码" class="headerlink" title="使用 urandom 生成高强度密码"></a>使用 urandom 生成高强度密码</h1><p>这里我们将使用 tr 条件来过滤 /dev/urandom 的输出，从而删掉那些不想要的字符，并打印出第一个出现的 14 位字符。</p>
<pre><code>&lt; /dev/urandom tr -dc A-Za-z0-9 | head -c14; echo
</code></pre><h1 id="使用-pwgen-生成高强度密码"><a href="#使用-pwgen-生成高强度密码" class="headerlink" title="使用 pwgen 生成高强度密码"></a>使用 pwgen 生成高强度密码</h1><p>pwgen 是一个生成随机、无特殊含义但可以正常拼读的密码。</p>
<p>安装 pwgen，运行：</p>
<pre><code>sudo apt-get install pwgen
</code></pre><p>安装好之后，使用以下命令来生成一个 14 位随机字符：</p>
<pre><code>pwgen 14 1
</code></pre><p>你也可以使用以下标记：</p>
<ul>
<li>-c 或 –capitalize 生成的密码中至少包含一个大写字母</li>
<li>-A 或 –no-capitalize 生成的密码中不含大写字母</li>
<li>-n 或 –numerals 生成的密码中至少包含一个数字</li>
<li>-0 或 –no-numerals 生成的密码中不含数字</li>
<li>-y 或 –symbols 生成的密码中至少包含一个特殊字符</li>
<li>-s 或 –secure 生成一个完全随机的密码</li>
<li>-B 或 –ambiguous 生成的密码中不含易混淆字符</li>
<li>-h 或 –help 输出帮助信息</li>
<li>-H 或 –sha1=path/to/file[#seed] 使用指定文件的 sha1 哈希值作为随机生成器</li>
<li>-C 按列输出生成的密码</li>
<li>-1 不按列输出生成的密码</li>
<li>-v 或 –no-vowels 不使用任何元音，以免意外生成让人讨厌的单词</li>
</ul>
<h1 id="使用-gpg-生成高强度密码"><a href="#使用-gpg-生成高强度密码" class="headerlink" title="使用 gpg 生成高强度密码"></a>使用 gpg 生成高强度密码</h1><p>我们也可以使用 gpg 工具来生成一个 14 位字符的密码：</p>
<pre><code>gpg --gen-random --armor 1 14
</code></pre><h1 id="其它方法"><a href="#其它方法" class="headerlink" title="其它方法"></a>其它方法</h1><p>当然，可能还有很多方法可以生成一个高强度密码。比方说，你可以添加以下 bash shell 方法到 ~/.bashrc 文件：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="title">genpasswd</span></span>() &#123; </div><div class="line">    strings /dev/urandom | grep -o <span class="string">'[[:alnum:]]'</span> | head -n 14 | tr <span class="_">-d</span> <span class="string">'\n'</span>; <span class="built_in">echo</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当你想要生成一个高强度的随机密码时，运行<code>genpasswd</code>就好了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;设置一个高强度的密码是非常重要的，这样才能够很好的保护自己的账号或者服务器以及确保自己的数据的安全。通常来说，一个高强度密码至少有 14 个字符，包括大小写字母、数字和特殊字符，并且要牢记永远不用那些字典中的单词。使用长密码比短密码要来的安全，因为密码越长越难猜测。在本文中，我将给你介绍几个不同方法，让你可以在 Linux 命令行下生成一个高强度密码。&lt;/p&gt;
    
    </summary>
    
      <category term="system" scheme="http://www.unix-like.com/categories/system/"/>
    
    
      <category term="shell" scheme="http://www.unix-like.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>LINUX下解决netstat查看TIME_WAIT状态过多问题</title>
    <link href="http://www.unix-like.com/2017/05/31/system/LINUX%E4%B8%8B%E8%A7%A3%E5%86%B3netstat%E6%9F%A5%E7%9C%8BTIME-WAIT%E7%8A%B6%E6%80%81%E8%BF%87%E5%A4%9A%E9%97%AE%E9%A2%98/"/>
    <id>http://www.unix-like.com/2017/05/31/system/LINUX下解决netstat查看TIME-WAIT状态过多问题/</id>
    <published>2017-05-31T08:03:00.000Z</published>
    <updated>2017-05-31T08:06:25.551Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># netstat -an|awk '/tcp/ &#123;print $6&#125;'|sort|uniq -c</span></div><div class="line">     16 CLOSING</div><div class="line">    130 ESTABLISHED</div><div class="line">    298 FIN_WAIT1</div><div class="line">     13 FIN_WAIT2</div><div class="line">      9 LAST_ACK</div><div class="line">      7 LISTEN</div><div class="line">    103 SYN_RECV</div><div class="line">   5204 TIME_WAIT</div><div class="line"></div><div class="line">状态：描述</div><div class="line">CLOSED：无连接是活动的或正在进行</div><div class="line">LISTEN：服务器在等待进入呼叫</div><div class="line">SYN_RECV：一个连接请求已经到达，等待确认</div><div class="line">SYN_SENT：应用已经开始，打开一个连接</div><div class="line">ESTABLISHED：正常数据传输状态</div><div class="line">FIN_WAIT1：应用说它已经完成</div><div class="line">FIN_WAIT2：另一边已同意释放</div><div class="line">ITMED_WAIT：等待所有分组死掉</div><div class="line">CLOSING：两边同时尝试关闭</div><div class="line">TIME_WAIT：另一边已初始化一个释放</div><div class="line">LAST_ACK：等待所有分组死掉</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>如发现系统存在大量TIME_WAIT状态的连接，通过调整内核参数解决，</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/sysctl.conf</div></pre></td></tr></table></figure>
<p>编辑文件，加入以下内容：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">net.ipv4.tcp_syncookies = 1</div><div class="line">net.ipv4.tcp_tw_reuse = 1</div><div class="line">net.ipv4.tcp_tw_recycle = 1</div><div class="line">net.ipv4.tcp_fin_timeout = 30</div></pre></td></tr></table></figure></p>
<p>然后执行 <code>/sbin/sysctl -p</code> 让参数生效。</p>
<p>net.ipv4.tcp_syncookies = 1 表示开启SYN cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；</p>
<p>net.ipv4.tcp_tw_reuse = 1 表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；</p>
<p>net.ipv4.tcp_tw_recycle = 1 表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。</p>
<p>net.ipv4.tcp_fin_timeout 修改系統默认的 TIMEOUT 时间</p>
<p>下面附上TIME_WAIT状态的意义：</p>
<p>客户端与服务器端建立TCP/IP连接后关闭SOCKET后，服务器端连接的端口</p>
<p>状态为TIME_WAIT</p>
<p>是不是所有执行主动关闭的socket都会进入TIME_WAIT状态呢？</p>
<p>有没有什么情况使主动关闭的socket直接进入CLOSED状态呢？</p>
<p>主动关闭的一方在发送最后一个 ack 后就会进入 TIME_WAIT 状态 停留2MSL（max segment lifetime）时间这个是TCP/IP必不可少的，也就是“解决”不了的。</p>
<p>也就是TCP/IP设计者本来是这么设计的</p>
<p>主要有两个原因</p>
<p>1。防止上一次连接中的包，迷路后重新出现，影响新连接（经过2MSL，上一次连接中所有的重复包都会消失）</p>
<p>2。可靠的关闭TCP连接</p>
<p>在主动关闭方发送的最后一个 ack(fin) ，有可能丢失，这时被动方会重新发fin, 如果这时主动方处于 CLOSED 状态 ，就会响应 rst 而不是 ack。所以主动方要处于 TIME_WAIT 状态，而不能是 CLOSED 。</p>
<p>TIME_WAIT 并不会占用很大资源的，除非受到攻击。</p>
<p>还有，如果一方 send 或 recv 超时，就会直接进入 CLOSED 状态</p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# netstat -an|awk &#39;/tcp/ &amp;#123;print $6&amp;#125;&#39;|sort|uniq -c&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     16 CLOSING&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    130 ESTABLISHED&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    298 FIN_WAIT1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     13 FIN_WAIT2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      9 LAST_ACK&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      7 LISTEN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    103 SYN_RECV&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   5204 TIME_WAIT&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;状态：描述&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CLOSED：无连接是活动的或正在进行&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LISTEN：服务器在等待进入呼叫&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SYN_RECV：一个连接请求已经到达，等待确认&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SYN_SENT：应用已经开始，打开一个连接&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ESTABLISHED：正常数据传输状态&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;FIN_WAIT1：应用说它已经完成&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;FIN_WAIT2：另一边已同意释放&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ITMED_WAIT：等待所有分组死掉&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CLOSING：两边同时尝试关闭&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;TIME_WAIT：另一边已初始化一个释放&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LAST_ACK：等待所有分组死掉&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="system" scheme="http://www.unix-like.com/categories/system/"/>
    
    
      <category term="调优" scheme="http://www.unix-like.com/tags/%E8%B0%83%E4%BC%98/"/>
    
  </entry>
  
  <entry>
    <title>logrotate切割日志nginx和php配置</title>
    <link href="http://www.unix-like.com/2017/05/31/service/logrotate%E5%88%87%E5%89%B2%E6%97%A5%E5%BF%97nginx%E5%92%8Cphp%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.unix-like.com/2017/05/31/service/logrotate切割日志nginx和php配置/</id>
    <published>2017-05-31T03:25:18.000Z</published>
    <updated>2017-05-31T03:27:20.615Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">/gotwo_data/logs/nginx/2mm.cn/*.log &#123;</div><div class="line">        daily</div><div class="line">        missingok</div><div class="line">        rotate 52</div><div class="line">        compress</div><div class="line">        delaycompress</div><div class="line">        notifempty</div><div class="line">        create 644 nginx nginx</div><div class="line">        sharedscripts</div><div class="line">        postrotate</div><div class="line">                [ <span class="_">-f</span> /gotwo_data/logs/nginx/nginx.pid ] &amp;&amp; <span class="built_in">kill</span> -USR1 `cat /gotwo_data/logs/nginx/nginx.pid`</div><div class="line">        endscript</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="php配置"><a href="#php配置" class="headerlink" title="php配置"></a>php配置</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">/gotwo_data/logs/php/*.log &#123;</div><div class="line">        daily</div><div class="line">        missingok</div><div class="line">        rotate 52</div><div class="line">        compress</div><div class="line">        delaycompress</div><div class="line">        notifempty</div><div class="line">        create 666 nobody nobody</div><div class="line">        sharedscripts</div><div class="line">        postrotate</div><div class="line">                [ <span class="_">-f</span> /gotwo_data/Application/php/var/run/php-fpm.pid ] &amp;&amp; <span class="built_in">kill</span> -USR1 `cat /gotwo_data/Application/php/var/run/php-fpm.pid`</div><div class="line">        endscript</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nginx配置&quot;&gt;&lt;a href=&quot;#nginx配置&quot; class=&quot;headerlink&quot; title=&quot;nginx配置&quot;&gt;&lt;/a&gt;nginx配置&lt;/h1&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/gotwo_data/logs/nginx/2mm.cn/*.log &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        daily&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        missingok&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        rotate 52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        compress&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        delaycompress&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        notifempty&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        create 644 nginx nginx&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        sharedscripts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        postrotate&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                [ &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt; /gotwo_data/logs/nginx/nginx.pid ] &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;kill&lt;/span&gt; -USR1 `cat /gotwo_data/logs/nginx/nginx.pid`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        endscript&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="service" scheme="http://www.unix-like.com/categories/service/"/>
    
    
      <category term="logrotate" scheme="http://www.unix-like.com/tags/logrotate/"/>
    
  </entry>
  
  <entry>
    <title>nginx常见问题</title>
    <link href="http://www.unix-like.com/2017/05/31/service/nginx%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    <id>http://www.unix-like.com/2017/05/31/service/nginx常见问题/</id>
    <published>2017-05-31T03:01:53.000Z</published>
    <updated>2017-05-31T03:05:47.153Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-错误日志：warn：an-upstream-response-is-buffered-to-a-temporary-file"><a href="#1-错误日志：warn：an-upstream-response-is-buffered-to-a-temporary-file" class="headerlink" title="1.错误日志：warn：an upstream response is buffered to a temporary file"></a>1.错误日志：warn：an upstream response is buffered to a temporary file</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">解决办法：增加fastcgi_buffers 8 4K;     fastcgi_buffer_size 4K;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="2-a-client-request-body-is-buffered-to-a-temporary-file"><a href="#2-a-client-request-body-is-buffered-to-a-temporary-file" class="headerlink" title="2. a client request body is buffered to a temporary file"></a>2. a client request body is buffered to a temporary file</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">解决办法：增加client_max_body_size 2050m;     client_body_buffer_size 1024k;</div></pre></td></tr></table></figure>
<h2 id="Nginx-的-buffer-机制："><a href="#Nginx-的-buffer-机制：" class="headerlink" title="Nginx 的 buffer 机制："></a>Nginx 的 buffer 机制：</h2><p>对于来自 FastCGI Server 的 Response，Nginx 将其缓冲到内存中，然后依次发送到客户端浏览器。缓冲区的大小由 fastcgi_buffers 和 fastcgi_buffer_size 两个值控制。</p>
<p>比如如下配置：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">fastcgi_buffers      8 4K;</div><div class="line">fastcgi_buffer_size  4K;</div></pre></td></tr></table></figure>
<p>fastcgi_buffers 控制 nginx 最多创建 8 个大小为 4K 的缓冲区，而 fastcgi_buffer_size 则是处理 Response 时第一个缓冲区的大小，不包含在前者中。所以总计能创建的最大内存缓冲区大小是 8<em>4K+4K = 36k。而这些缓冲区是根据实际的 Response 大小动态生成的，并不是一次性创建的。比如一个 8K 的页面，Nginx 会创建 2</em>4K 共 2 个 buffers。</p>
<p>当 Response 小于等于 36k 时，所有数据当然全部在内存中处理。如果 Response 大于 36k 呢？fastcgi_temp 的作用就在于此。多出来的数据会被临时写入到文件中，放在这个目录下面。同时你会在 error.log 中看到一条类似 warning：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">2010/03/13 03:42:22 [warn] 3994#0: *1 an upstream response is buffered to a temporary file</div><div class="line">/usr/local/nginx/fastcgi_temp/1/00/0000000001 while reading upstream, </div><div class="line">client: 192.168.1.111,</div><div class="line">server: www.xxx.cn,</div><div class="line">request: &quot;POST /test.php HTTP/1.1&quot;,</div><div class="line">upstream: &quot;fastcgi://127.0.0.1:9000&quot;, </div><div class="line">host: &quot;xxx.cn&quot;,</div><div class="line">referrer: &quot;http://xxx.cn/test.php&quot;</div></pre></td></tr></table></figure>
<p>显然，缓冲区设置的太小的话，Nginx 会频繁读写硬盘，对性能有很大的影响，但也不是越大越好，没意义. </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-错误日志：warn：an-upstream-response-is-buffered-to-a-temporary-file&quot;&gt;&lt;a href=&quot;#1-错误日志：warn：an-upstream-response-is-buffered-to-a-temporary-file&quot; class=&quot;headerlink&quot; title=&quot;1.错误日志：warn：an upstream response is buffered to a temporary file&quot;&gt;&lt;/a&gt;1.错误日志：warn：an upstream response is buffered to a temporary file&lt;/h1&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;解决办法：增加fastcgi_buffers 8 4K;     fastcgi_buffer_size 4K;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="service" scheme="http://www.unix-like.com/categories/service/"/>
    
    
      <category term="nginx" scheme="http://www.unix-like.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>恢复linux被误删文件</title>
    <link href="http://www.unix-like.com/2017/05/30/system/%E6%81%A2%E5%A4%8Dlinux%E8%A2%AB%E8%AF%AF%E5%88%A0%E6%96%87%E4%BB%B6/"/>
    <id>http://www.unix-like.com/2017/05/30/system/恢复linux被误删文件/</id>
    <published>2017-05-30T10:31:56.000Z</published>
    <updated>2017-05-30T10:34:19.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、首先我们先来了解下文件删除原理："><a href="#一、首先我们先来了解下文件删除原理：" class="headerlink" title="一、首先我们先来了解下文件删除原理："></a>一、首先我们先来了解下文件删除原理：</h1><ul>
<li>1）linux是通过link的数量来控制文件删除的，只有当一个文件不存在任何link的时候，这个文件才会被删除。一般来说，每个文件都有2个link计数器：i_count和i_nlink。</li>
<li>2）当进程打开了某个文件时，只要该进程保持打开该文件，即使将其删除，它依然存在于磁盘中。这意味着，进程并不知道文件已经被删除，它仍然可以向打开该文件时提供给它的文件描述符进行读取和写入。除了该进程之外，这个文件是不可见的，因为已经删除了其相应的目录索引节点。</li>
<li>3）当你发现你误删除了文件后，要做的第一件事是马上卸载被误删除文件所在的分区，或者以只读的方式来挂载该分区。原因大家都很清楚，文件被删除后，文件中的数据还存在磁盘上，除非存放这些数据的数据块又被操作系统分配出去了。我们这一步就是尽量降低数据块中数据被覆盖的风险，以提高恢复数据成功的比率。</li>
</ul>
<a id="more"></a>
<h1 id="二、了解完后，实战演练"><a href="#二、了解完后，实战演练" class="headerlink" title="二、了解完后，实战演练"></a>二、了解完后，实战演练</h1><hr>
<h2 id="方案-1）现在我向大家介绍使用extundelete恢复文件（适合rhel6-X系统的ext4"><a href="#方案-1）现在我向大家介绍使用extundelete恢复文件（适合rhel6-X系统的ext4" class="headerlink" title="方案 1）现在我向大家介绍使用extundelete恢复文件（适合rhel6.X系统的ext4)"></a>方案 1）现在我向大家介绍使用extundelete恢复文件（适合rhel6.X系统的ext4)</h2><h3 id="1-编译安装extundelete-0-2-4"><a href="#1-编译安装extundelete-0-2-4" class="headerlink" title="1.编译安装extundelete-0.2.4"></a>1.编译安装extundelete-0.2.4</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">tar -jxvf  extundelete-0.2.4.tar.bz2</div><div class="line"><span class="built_in">cd</span> extundelete-0.2.4</div><div class="line">./configure （这步出现错误，请看下文）</div><div class="line">mount /dev/cdrom /mnt</div><div class="line">rpm -ivh  /mnt/Packages/e2fsprogs-devel-1.41.12-18.el6.x86_64.rpm  （必须安装否则，前面./configure报错）</div><div class="line">./configure （成功）</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h3 id="2-软件安装完毕，下面我们来恢复文件吧"><a href="#2-软件安装完毕，下面我们来恢复文件吧" class="headerlink" title="2.软件安装完毕，下面我们来恢复文件吧"></a>2.软件安装完毕，下面我们来恢复文件吧</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mkdir recover</div><div class="line"><span class="built_in">cd</span> recover</div><div class="line">extundelete  /dev/sda4 --inode  2  （看到你所删除的文件）</div><div class="line">extundelete  /dev/sda4 -restore-inode 15 （按对应的节点来恢复文件）</div><div class="line">extundelete  /dev/sda4 -restore-file  a.txt   （按对应文件名来恢复文件）</div><div class="line">extundelete  /dev/sda4 -restore-dirctory etc  （按对应的目录，这里我以etc目录）</div><div class="line">extundelete  /dev/sda4 -restore-all （全部恢复）</div></pre></td></tr></table></figure>
<hr>
<h2 id="方案2）使用lsof自带一个的神秘功能"><a href="#方案2）使用lsof自带一个的神秘功能" class="headerlink" title="方案2）使用lsof自带一个的神秘功能"></a>方案2）使用lsof自带一个的神秘功能</h2><p>　　原理：大多数与 lsof 相关的信息都存储于以进程的 PID命名的目录中,假如由于误操作将/var/log/messages文件删除掉了，那么这时要将/var/log/messages文件恢复的方法如下：</p>
<p>　　首先使用lsof来查看当前是否有进程打开/var/logmessages文件，如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">lsof |grep /var/<span class="built_in">log</span>/messages</div><div class="line"></div><div class="line">syslogd 1283 root 2w REG 3,3 5381017 1773647 /var/<span class="built_in">log</span>/messages (deleted)</div></pre></td></tr></table></figure>
<p>　　从上面的信息可以看到 PID 1283（syslogd）打开文件的文件描述符为 2。同时还可以看到/var/log/messages已经标记被删除了。因此我们可以在 /proc/1283/fd/2 （fd下的每个以数字命名的文件表示进程对应的文件描述符）中查看相应的信息，如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">head -n 10 /proc/1283/fd/2</div><div class="line"></div><div class="line">Aug 4 13:50:15 holmes86 syslogd 1.4.1: restart.</div><div class="line">Aug 4 13:50:15 holmes86 kernel: klogd 1.4.1, <span class="built_in">log</span> <span class="built_in">source</span> = /proc/kmsg started.</div><div class="line">Aug 4 13:50:15 holmes86 kernel: Linux version 2.6.22.1-8 (root@everestbuilder.linux-ren.org)</div><div class="line">(gcc version 4.2.0) <span class="comment">#1 SMP Wed Jul 18 11:18:32 EDT 2007 Aug 4 13:50:15 holmes86 kernel:</span></div><div class="line">BIOS-provided physical RAM map: Aug 4 13:50:15 holmes86 kernel: BIOS<span class="_">-e</span>820:</div><div class="line">0000000000000000 - 000000000009f000 (usable) Aug 4 13:50:15 holmes86 kernel: BIOS<span class="_">-e</span>820:</div><div class="line">000000000009f000 - 00000000000a0000 (reserved) Aug 4 13:50:15 holmes86 kernel:</div><div class="line">BIOS<span class="_">-e</span>820: 0000000000100000 - 000000001f7d3800 (usable) Aug 4 13:50:15 holmes86 kernel:</div><div class="line">BIOS<span class="_">-e</span>820: 000000001f7d3800 - 0000000020000000 (reserved) Aug 4 13:50:15 holmes86</div><div class="line">kernel: BIOS<span class="_">-e</span>820: 00000000e0000000 - 00000000f0007000 (reserved) Aug 4 13:50:15</div><div class="line">holmes86 kernel: BIOS<span class="_">-e</span>820: 00000000f0008000 - 00000000f000c000 (reserved)</div></pre></td></tr></table></figure>
<p>　　从上面的信息可以看出，查看 /proc/8663/fd/15 就可以得到所要恢复的数据。如果可以通过文件描述符查看相应的数据，那么就可以使用 I/O 重定向将其复制到文件中，如:cat /proc/1283/fd/2 &gt; /var/log/messages对于许多应用程序，尤其是日志文件和数据库，这种恢复删除文件的方法非常有用。</p>
<hr>
<h2 id="方案3）使用ext3grep恢复文件（适合rhel5-X系统的ext3"><a href="#方案3）使用ext3grep恢复文件（适合rhel5-X系统的ext3" class="headerlink" title="方案3）使用ext3grep恢复文件（适合rhel5.X系统的ext3)"></a>方案3）使用ext3grep恢复文件（适合rhel5.X系统的ext3)</h2><h3 id="1-编译安装ext3grep-0-10-1"><a href="#1-编译安装ext3grep-0-10-1" class="headerlink" title="1. 编译安装ext3grep-0.10.1"></a>1. 编译安装ext3grep-0.10.1</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">tar -jxvf  ext3grep-0.10.1.tar.gz</div><div class="line"><span class="built_in">cd</span> ext3grep-0.10.1</div><div class="line">./configure</div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure>
<h3 id="2-软件安装完毕，下面我们来恢复文件吧-1"><a href="#2-软件安装完毕，下面我们来恢复文件吧-1" class="headerlink" title="2. 软件安装完毕，下面我们来恢复文件吧"></a>2. 软件安装完毕，下面我们来恢复文件吧</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir recover</div><div class="line"><span class="built_in">cd</span> recover</div><div class="line">ext3grep /dev/your-device --restore-filepath/to/your/file/filename</div></pre></td></tr></table></figure>
<p>　　需要注意的是，上面的文件路径，是在该分区上文件路径。假设我们要恢复/dev/sda3分区上文件，这个分区原来的安装点是/home，现在想恢复文件/home/easwy/vi/tips.xml，那么输入的命令应该是：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ext3grep /dev/sda3--restore-file easwy/vi/tips.xml</div></pre></td></tr></table></figure>
<p>　　所有恢复的文件都会放在当前目下在<code>RESTORED_FILES</code>目录下，大小也一样，这里<code>RESTORED_FILES</code>目录是执行ext3grep的当前目录下</p>
<p>　　如果你忘记了文件名，或者你误删除的是一个目录而你无法记全该目录中的文件，你可以先用下面的命令查询一下文件名：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ext3grep /dev/sda3 --dump-names | tee filename.txt</div></pre></td></tr></table></figure>
<p>　　上面的命令把ext3grep命令的输出记录到文件filename.txt中，你可以慢慢查看，或者使用grep命令过滤出你需要的信息。</p>
<p>　　当你知道了目录/文件的信息后，就可以用上面说的命令进行恢复了。</p>
<p>　　复所有文件和目录，但是目录的话，如果删除时间较长，不一定能完全恢复，压缩文件一般都能恢复</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ext3grep /termite/cc-disk --restore-all</div><div class="line">ext3grep /dev/sda3  --ls --inode 2 创建扫描分区文件：sda5.ext3grep.stage1和sda5.ext3grep.stage2</div></pre></td></tr></table></figure>
<p>　　如果想要重新生成可以删除这个两个文件，再次执行这条命令。另外当第一次执行ext3grep /dev/sda3 –restore-file test/a.txt进行还原时也会自动生成扫描分区文件。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、首先我们先来了解下文件删除原理：&quot;&gt;&lt;a href=&quot;#一、首先我们先来了解下文件删除原理：&quot; class=&quot;headerlink&quot; title=&quot;一、首先我们先来了解下文件删除原理：&quot;&gt;&lt;/a&gt;一、首先我们先来了解下文件删除原理：&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;1）linux是通过link的数量来控制文件删除的，只有当一个文件不存在任何link的时候，这个文件才会被删除。一般来说，每个文件都有2个link计数器：i_count和i_nlink。&lt;/li&gt;
&lt;li&gt;2）当进程打开了某个文件时，只要该进程保持打开该文件，即使将其删除，它依然存在于磁盘中。这意味着，进程并不知道文件已经被删除，它仍然可以向打开该文件时提供给它的文件描述符进行读取和写入。除了该进程之外，这个文件是不可见的，因为已经删除了其相应的目录索引节点。&lt;/li&gt;
&lt;li&gt;3）当你发现你误删除了文件后，要做的第一件事是马上卸载被误删除文件所在的分区，或者以只读的方式来挂载该分区。原因大家都很清楚，文件被删除后，文件中的数据还存在磁盘上，除非存放这些数据的数据块又被操作系统分配出去了。我们这一步就是尽量降低数据块中数据被覆盖的风险，以提高恢复数据成功的比率。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="system" scheme="http://www.unix-like.com/categories/system/"/>
    
    
      <category term="数据恢复" scheme="http://www.unix-like.com/tags/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/"/>
    
  </entry>
  
  <entry>
    <title>修改PHP上传文件大小限制</title>
    <link href="http://www.unix-like.com/2017/05/30/service/%E4%BF%AE%E6%94%B9PHP%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E9%99%90%E5%88%B6/"/>
    <id>http://www.unix-like.com/2017/05/30/service/修改PHP上传文件大小限制/</id>
    <published>2017-05-30T01:56:54.000Z</published>
    <updated>2017-06-02T01:56:49.133Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-配置php-ini文件-（以上传500M以下大小的文件为例）"><a href="#一-配置php-ini文件-（以上传500M以下大小的文件为例）" class="headerlink" title="一.配置php.ini文件 （以上传500M以下大小的文件为例）"></a>一.配置php.ini文件 （以上传500M以下大小的文件为例）</h1><p>　　查找以下选项并修改:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">file_uploads = On ;打开文件上传选项</div><div class="line">upload_max_filesize = 500M ;上传文件上限</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>　　如果要上传比较大的文件，仅仅以上两条还不够，必须把服务器缓存上限调大，把脚本最大执行时间变长</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">post_max_size = 500M ;post上限</div><div class="line">max_execution_time = 1800 ; Maximum execution time of each script, <span class="keyword">in</span> seconds脚本最大执行时间</div><div class="line">max_input_time = 1800 ; Maximum amount of time each script may spend parsing request data</div><div class="line">memory_limit = 128M ; Maximum amount of memory a script may consume (128MB)内存上限</div></pre></td></tr></table></figure>
<h1 id="二-修改nginx配置"><a href="#二-修改nginx配置" class="headerlink" title="二.修改nginx配置"></a>二.修改nginx配置</h1><p>　　需要在对应的虚拟主机配置中修改　<code>client_max_body_size</code> 参数的值</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">client_max_body_size 500m;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一-配置php-ini文件-（以上传500M以下大小的文件为例）&quot;&gt;&lt;a href=&quot;#一-配置php-ini文件-（以上传500M以下大小的文件为例）&quot; class=&quot;headerlink&quot; title=&quot;一.配置php.ini文件 （以上传500M以下大小的文件为例）&quot;&gt;&lt;/a&gt;一.配置php.ini文件 （以上传500M以下大小的文件为例）&lt;/h1&gt;&lt;p&gt;　　查找以下选项并修改:&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;file_uploads = On ;打开文件上传选项&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;upload_max_filesize = 500M ;上传文件上限&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="service" scheme="http://www.unix-like.com/categories/service/"/>
    
    
      <category term="php" scheme="http://www.unix-like.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Windows与Linux共享文件夹互相访问</title>
    <link href="http://www.unix-like.com/2017/05/29/service/%20Windows%E4%B8%8ELinux%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E4%BA%92%E7%9B%B8%E8%AE%BF%E9%97%AE%20/"/>
    <id>http://www.unix-like.com/2017/05/29/service/ Windows与Linux共享文件夹互相访问 /</id>
    <published>2017-05-29T13:56:20.000Z</published>
    <updated>2017-05-29T14:05:31.845Z</updated>
    
    <content type="html"><![CDATA[<h1 id="首先安装并配置软件samba"><a href="#首先安装并配置软件samba" class="headerlink" title="首先安装并配置软件samba"></a>首先安装并配置软件samba</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">sudo yum install samba samba-client  </div><div class="line">vim /etc/samba/smb.conf  </div><div class="line">      </div><div class="line">找到security这行并将<span class="comment">#注释符号去掉改成  </span></div><div class="line">security = share     <span class="comment">#共享模式  </span></div><div class="line">      </div><div class="line">添加如下代码：  </div><div class="line">      </div><div class="line">[share]  </div><div class="line">comment = share  </div><div class="line">path = /home/<span class="built_in">test</span>          <span class="comment">#设置共享文件夹目录  </span></div><div class="line">browseable = yes  </div><div class="line">guest ok = yes  </div><div class="line">writable = yes  </div><div class="line"></div><div class="line">service smb start  </div><div class="line">service smbd start   (ubuntu)</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="（1）在windows下访问Linux共享："><a href="#（1）在windows下访问Linux共享：" class="headerlink" title="（1）在windows下访问Linux共享："></a>（1）在windows下访问Linux共享：</h2><p>直接在windows运行里输入\192.168.16.128即可访问linux共享资源，并且不需要密码。</p>
<h2 id="（2）在linux下访问windows共享："><a href="#（2）在linux下访问windows共享：" class="headerlink" title="（2）在linux下访问windows共享："></a>（2）在linux下访问windows共享：</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">smbclient -L 192.168.16.1 -U xiaoxing   <span class="comment"># 查看共享了那些目录，由此知道主机名为XIAOXING-PC</span></div><div class="line"></div><div class="line">smbclient //192.168.16.1/Users -U xiaoxing     输入windows密码即可进入</div></pre></td></tr></table></figure>
<p>直接挂载windows共享目录</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo mount -t smbfs -o username=xiaoxing,password=123456   //XIAOXING-PC/system /mnt/win/</div><div class="line">或者：</div><div class="line">sudo mount -t smbfs -o username=xiaoxing,password=123456   //192.168.16.1/system /mnt/win/</div><div class="line">或者：</div><div class="line">sudo mount -t smbfs -o username=xiaoxing,password=123456,ip=192.168.16.1 //XIAOXING-PC/system /mnt/win/</div></pre></td></tr></table></figure>
<p>注意：</p>
<p>如果出现如下错误：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mount: unknown filesystem <span class="built_in">type</span> ’smbfs’</div></pre></td></tr></table></figure>
<p>说明系统已经不能识别smbfs文件系统了，查资料说RHE5的kernel已经不再支持smbfs，而改用Common Internet File Systemcifs(cifs)取代了原有的smbfs，所以命令就改为:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mount -t cifs -o username=xiaoxing,password=123456   //192.168.16.1/system /mnt/win/</div></pre></td></tr></table></figure>
<p>解开挂载</p>
<p>断开刚才挂载在linux /mnt/win/路径上的winodws共享文件夹。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo umount /mnt/win/</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;首先安装并配置软件samba&quot;&gt;&lt;a href=&quot;#首先安装并配置软件samba&quot; class=&quot;headerlink&quot; title=&quot;首先安装并配置软件samba&quot;&gt;&lt;/a&gt;首先安装并配置软件samba&lt;/h1&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo yum install samba samba-client  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;vim /etc/samba/smb.conf  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;找到security这行并将&lt;span class=&quot;comment&quot;&gt;#注释符号去掉改成  &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;security = share     &lt;span class=&quot;comment&quot;&gt;#共享模式  &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;添加如下代码：  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[share]  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;comment = share  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;path = /home/&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;          &lt;span class=&quot;comment&quot;&gt;#设置共享文件夹目录  &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;browseable = yes  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;guest ok = yes  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;writable = yes  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;service smb start  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;service smbd start   (ubuntu)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="service" scheme="http://www.unix-like.com/categories/service/"/>
    
    
      <category term="samba" scheme="http://www.unix-like.com/tags/samba/"/>
    
  </entry>
  
  <entry>
    <title>系统运维工程师装逼完全指南</title>
    <link href="http://www.unix-like.com/2017/05/28/life/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E8%A3%85%E9%80%BC%E5%AE%8C%E5%85%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://www.unix-like.com/2017/05/28/life/系统运维工程师装逼完全指南/</id>
    <published>2017-05-28T10:49:44.000Z</published>
    <updated>2017-05-28T15:23:41.168Z</updated>
    
    <content type="html"><![CDATA[<p>1、全球化的认证有助于提升逼格，什么OCM、CCIE、RHCA、CISSP等等能考都考，再不济，也要有一张系统架构设计师或者网络规划设计师的信产部认证。每过一个认证，逼格提升一档。</p>
<a id="more"></a>
<p>2、TCP/IP协议、Linux内核深入研究、ORACLE大全等等之类的超过1千页大本头的书能有效提升B格，一定要放手边。不懂不要紧，别人能看见就行了。真有人跟你谈这些，也别担心装B失败，谈网络就从TCP的实现谈起，谈Linux就从内存的管理谈起，谈数据库就从各数据库SQL语句的源码实现谈起。如果有人跟你谈MS的东西也不要紧，就说自己之前有多年的微软的工作经历，外包的也算。反正也不会有查。有人非要跟你谈硬件，最次也要从计算机部件分类谈起吧。</p>
<p>3、大众化的东西要少用。能用ATS，就别用squid；能用postgresql，就别用MySQL；坚信什么nginx、lighty这种webserver要比apache好一万倍，而且apache能实现的功能，这些都能实现，不行就自己写模块、写扩展。实在要用apache，也别用高版本，抱死1.3的系统。有人要是问起，就说这是基于1.3的版是自己深度二次开发版本。实在要找不到的话也不要紧，没事在sf、oschina上看看什么下载量少的项目，背背项目简介啥的。不得不说，这两个网站太贴心，分类都给你做好了。总之，小众的东西能很有效的提升你的装逼级别。</p>
<p>4、写脚本的话，别用grep、sort 、uniq、管道这类命令。使用纯粹的awk、sed的实现，长度不要紧，阅读性、性能也不是问题。功能实现了，别人都还不懂这就是关键。如果真有人来请教，也要装出一副很简单的表情。切记不要摇头尾巴晃。就算是你是从《sed和awk》这种书上抄你自己也不一定能看懂的代码。</p>
<p>5、虽然会shell，但也要少用shell。初级装逼者，系统管理会首选perl、python、php这类3p的工具，而且要对shell这种语言有一种不屑。把什么性能、移植性、面向对象要常挂嘴边。如果还能再写几行什么erlang、ruby、lua这类语言做系统管理，绝对是装B神器，也是中级装逼的标准。高级装逼者会有Haskell这类函数式语言进行系统管理，这绝对是装B的B2轰炸机呀。当然，资深装逼者会返璞归真，使用面向对象进行shell编程。对，你没看错，是使用OO进行shell编程。</p>
<p>6、当谈到Redhat、ubuntu这类大众发行版本时，就回复一个字“切！”LFS、Gentoo这类系统绝对是装逼的首选。不为什么，就为在无穷尽的编译中找到属于自己的快感。如果非装大众发行版，也要从开机画面、登陆提示等等地方打自己上深刻的烙印。装逼的寂寞岂是一般人能懂的。</p>
<p>7、对什么checkpoint，juniper等表示不屑。必须天天把iptabes的链和表都挂在嘴边，尤其是mangle表。原则上对商用产品的一律不屑一顾，什么f5，radware一律自己开发实现。至于意外的将自己关在外面的事情一定要严格遵守各自公司的保密协议。</p>
<p>8、对于操作终端呢，像SecureCRT、xshell这种绝对是不用的，一定要用最原始的，什么黑屏绿字只是初级装逼者的水平，中高级则是Alpha半透明终端，桌面背景在设置个全球internet流量趋势图。让你根本就不知道他天天对着屏幕在敲什么东西。有事没事编译一些大型软件，看着翻滚的屏幕做思考状。</p>
<p>9、名片的title一定要是系统架构师，没有名片也不要紧，什么QQ签名、人人状态、微博简介上，有人看的地方一定要写上。这些都是提升B格的好地方。</p>
<p>10、初级装逼谈流量、PV、自动化；中级装逼谈流程、谈规范，什么ITIL、ITSM要常挂嘴边；高级装逼谈架构、谈模式；资深装逼则谈合同、谈成本。</p>
<p>11、混圈子对装逼来非常有必要的。什么XX沙龙、XX架构师大会、XX优化大会之类必要是常客，露个B脸就行。基本原则就是跟搞系统谈网络，跟搞网络的谈数据库，跟搞数据库的谈安全……对方不懂什么就谈什么对就了</p>
<p>12、最后，骨灰级早就超出三界外，不在五行中，他们注定有着传奇的色彩。他们正忙于对装逼者们进行职业发展规划。装逼助理、初级装逼、高级装逼、资深装逼、装逼总监直至CBO。如果发展了到了CBO，那么你一定是一位惊天地、泣鬼神的一代B神，一统江湖的教主，供万千iBer敬仰。darling，我很看好你哟！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、全球化的认证有助于提升逼格，什么OCM、CCIE、RHCA、CISSP等等能考都考，再不济，也要有一张系统架构设计师或者网络规划设计师的信产部认证。每过一个认证，逼格提升一档。&lt;/p&gt;
    
    </summary>
    
      <category term="life" scheme="http://www.unix-like.com/categories/life/"/>
    
    
      <category term="职业" scheme="http://www.unix-like.com/tags/%E8%81%8C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>运维人装逼指南大全</title>
    <link href="http://www.unix-like.com/2017/05/28/life/%E8%BF%90%E7%BB%B4%E4%BA%BA%E8%A3%85%E9%80%BC%E6%8C%87%E5%8D%97%E5%A4%A7%E5%85%A8/"/>
    <id>http://www.unix-like.com/2017/05/28/life/运维人装逼指南大全/</id>
    <published>2017-05-28T10:27:19.000Z</published>
    <updated>2017-05-28T10:48:50.244Z</updated>
    
    <content type="html"><![CDATA[<p>曾经有一首诗是这么写的</p>
<blockquote>
<p>装逼，是一种态度??</p>
<p>装逼的人生不可限量</p>
<p>装逼如煲汤</p>
<p>遇到烹制的高手，逼格立马飙升</p>
</blockquote>
<a id="more"></a>
<p>装逼，已被业界大神誉为当代职场人的基本素养</p>
<p>可是</p>
<p>网上流传的装逼指南一大把</p>
<p>唯独缺少咱运维人的这一发</p>
<p>今天线哥就帮大家来扒一扒</p>
<p>咱们一起把这装逼宝典传承下</p>
<p>　　话说，运维人拥有天然装逼优势，面对无数迭代升级的软硬件，数都数不过来的各类技术，互联网、云计算、大数据的热潮，跑断腿的各类行业大会……这些都为我们营造了极好的客观条件。</p>
<p>　　可以说，在全民都看你的时代，你不装逼，不仅浪费了你这一身好手段，而且辜负了天恩浩荡呀！</p>
<p>　　线哥虽是运营人，但长期浸淫在运维大咖身边，韬光养晦，苦练内功，总结了历来大神的装逼心得，并且通过实战检验，可谓天下无双，故取名曰《装逼宝典》，以补《葵花宝典》千年缺配。</p>
<p>　　现在很多运维人逼格不高，主要是因其来路不正，“小米+步枪”的时代远去，来路不正永远低人一等。所以一张权威的架构师认证就显得无比重要了，国内比较权威的系统架构设计师或者网络规划设计师的认证要考，国际的什么OCM、CCIE、RHCA、CISSP等等更要考，有了这些证件决定你在哪一个层次装逼，当然了，逼格的飙升也有赖于部分努力。</p>
<p>　　你会发现一些资深装逼手边永远摆着几本大部头的书，看着都瘆人。何谓大部头，什么？几百页的书你也好意思提，至少得上千页，才配称得上大部头。像什么TCP/IP协议、Linux内核研究、ORACLE大全等等。书一定要摆在显眼位置，你不用担心万一有人问起装逼遭遇滑铁卢。如果有人问硬件，你可以从计算机硬件基础谈起，有人问MS的内容，你那几年微软外包工作经历正好派上用场，现在数据库比较热，你可以从SQL语句的源码开聊，网络就谈TCP，Linux就谈内存管理。聊着聊着，你自己都被自己感动了，征服了。</p>
<h1 id="跟菜鸟划开界限"><a href="#跟菜鸟划开界限" class="headerlink" title="跟菜鸟划开界限"></a>跟菜鸟划开界限</h1><p>　　菜鸟在管理系统上经常选用perl、python、php这些3p工具，你要避开这些工具，另外shell也要少用，当菜鸟问起，你要表现出不屑来。如果做系统管理你要会写几行erlang、ruby、lua这类语言，如果你胆儿够大，可以整一整Haskell这类函数式语言。我敢说，懂一点这个，你绝对把逼装大了。</p>
<h1 id="避开大众化路线"><a href="#避开大众化路线" class="headerlink" title="避开大众化路线"></a>避开大众化路线</h1><p>　　当别人问你用squid吗？你说你用ATS；当别人问你用MySQL吗？你说你用postgresql；当别人为你用apache吗？你说你用nginx、lighty。如果你发现当别人也在学习这些技术了，你就到sf、oschina网站上看看那些下载量小的项目，多背背项目简介，当他们在你面前炫耀新技术时，你跟他们聊一聊这些项目，这时你发现他们只剩下长大了的嘴。你要记住，越小众的东西越显得高逼格，小众意味着高端，这是历史反复验证的。</p>
<h1 id="为自己代言"><a href="#为自己代言" class="headerlink" title="为自己代言"></a>为自己代言</h1><p>　　不装逼的人永远不懂装逼人的寂寞，装逼到极致是高冷的，曲高和寡。比如当大家还在谈Redhat、ubuntu这类大众发行版本时，你总是有意无意间避开，别人问你看法的时候，你对此不置一词，反而大谈特谈LFS、Gentoo。因为大众的东西是别人的，扒到属于自己的东西才显得更有张力，会带来不一样的快感呦。</p>
<p>　　很多人写脚本都爱用grep、sort 、uniq这类命令，这类命令的功能比较复杂，而你术业有专攻，使用最纯粹的awk、sed来实现，最关键的是当你用它们实现某些功能，别人都看不懂。别人不懂就会问，而这时你却表现出一副轻描淡写的表情。而这些对于他们来说，就算抄书也不一定真能看懂。</p>
<h1 id="设置屏幕放大招"><a href="#设置屏幕放大招" class="headerlink" title="设置屏幕放大招"></a>设置屏幕放大招</h1><p>　　操作终端一定要大肆显摆，那种黑屏绿字好莱坞大片式简直弱爆了，你用的是什么，是Alpha半透明终端，最好在桌面设置一个全球internet流量走势图，偶尔对着翻滚的屏幕做深入思考状，谁也不知道你在琢磨什么惊天地泣鬼神的东西。</p>
<h1 id="处处留情"><a href="#处处留情" class="headerlink" title="处处留情"></a>处处留情</h1><p>　　软硬件都解决了，这时候作为运维人的装逼基础已经够完美了，可是距离互联网大神级别还有距离。这时候你要抓住一切手段营销自己。不要让“网管”这个词在你耳朵边出现，你要时刻在明面暗面提示别人，我是架构师或规划师，把所有能展示自己title的地方都写上，什么名片啊、微信啊、QQ签名、脉脉、拉勾网等等，当然如果你愿意加上”首都在线“的前缀，可能效果会出奇不意。</p>
<h1 id="混精英圈子"><a href="#混精英圈子" class="headerlink" title="混精英圈子"></a>混精英圈子</h1><p>　　混圈子对于装逼是极为重要的。现在各种大会很多，鱼龙混杂，像什么GMIC、ChinaJoy之类的大会很难找到自己定位，而一般的XX架构师大会、XX优化大会、XX沙龙最多混个脸熟就好了。主要瞄准几个特定场合可获得四两拨千斤的效果，比如什么青年计算机学会论坛，统计之都论坛，以及蝴蝶沙龙，尤其蝴蝶沙龙是一个比较纯粹的架构师聚会，多去混这种场子，争取能演讲，那么你在这个圈子就很接近大神级人物了。</p>
<h1 id="精通云计算"><a href="#精通云计算" class="headerlink" title="精通云计算"></a>精通云计算</h1><p>　　一般而言，骨灰级的大神被当作信仰一样崇拜，这些人物大都具有传奇色彩，据线哥多年观察，这些人物的思考域比较广，他思考问题具有生态图谱效应，比如做架构师，你一定要多思考云计算，了解SAAS，熟悉PAAS，精通IAAS。尤其关注当前IAAS战略趋势以及差异化发展。当前的经济趋势是企业出海，不管是电商、游戏还是视频企业，都在向海外拓展业务，在倡导全球云计算布局领域中，国内首要关注首都在线，因为这是首家全球一体化云计算服务商，拥有全球私网GPN，通过它能够高效稳定安全连接世界。</p>
<p>　　最后不得不说，装逼是个系统工程，从装逼助理、装逼专员、高级装逼、资深装逼、装逼总监直至CBO。取经之路漫长，你在哪个层级不重要，重要的是，装逼精神不弃，奋斗之路不止。送给万千参透“人生如戏”的职场运维人士们！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;曾经有一首诗是这么写的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;装逼，是一种态度??&lt;/p&gt;
&lt;p&gt;装逼的人生不可限量&lt;/p&gt;
&lt;p&gt;装逼如煲汤&lt;/p&gt;
&lt;p&gt;遇到烹制的高手，逼格立马飙升&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="life" scheme="http://www.unix-like.com/categories/life/"/>
    
    
      <category term="职业" scheme="http://www.unix-like.com/tags/%E8%81%8C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>tc命令——Linux基于IP进行流量限速</title>
    <link href="http://www.unix-like.com/2017/05/28/service/tc%E5%91%BD%E4%BB%A4Linux%E5%9F%BA%E4%BA%8EIP%E8%BF%9B%E8%A1%8C%E6%B5%81%E9%87%8F%E9%99%90%E9%80%9F/"/>
    <id>http://www.unix-like.com/2017/05/28/service/tc命令Linux基于IP进行流量限速/</id>
    <published>2017-05-28T05:18:20.000Z</published>
    <updated>2017-05-28T05:28:24.284Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、TC原理"><a href="#一、TC原理" class="headerlink" title="一、TC原理"></a>一、TC原理</h1><p>　　Linux操作系统中的流量控制器TC（Traffic Control）用于Linux内核的流量控制，主要是通过在输出端口处建立一个队列来实现流量控制。</p>
<a id="more"></a>
<p>　　接收包从输入接口进来后，经过流量限制丢弃不符合规定的数据包，由输入多路分配器进行判断选择：</p>
<ul>
<li>如果接收包的目的主机是本主机，那么将该包送给上层处理，否则需要进行转发，将接收包交到转发块（Forwarding Block）处理。</li>
<li>转发块同时也接收本主机上层(TCP、UDP等)产生的包，通过查看路由表，决定所处理包的下一跳。</li>
<li>然后，对包进行排列以便将它们送到输出接口。</li>
</ul>
<p>　　一般只能限制网卡发送的数据包，不能限制网卡接收的数据包，所以可以通过改变发送次序靠控制传输速率。Linux流量控制主要是在输出接口排列时进行处理和实现的。</p>
<h1 id="二、TC规则"><a href="#二、TC规则" class="headerlink" title="二、TC规则"></a>二、TC规则</h1><h2 id="2-1、流量控制方式"><a href="#2-1、流量控制方式" class="headerlink" title="2.1、流量控制方式"></a>2.1、流量控制方式</h2><p>　　流量控制包括以下几种方式：</p>
<ul>
<li>SHAPING(限制) </li>
</ul>
<p>　　当流量被限制，它的传输速率就被控制在某个值以下。限制值可以大大小于有效带宽，这样可以平滑突发数据流量，使网络更为稳定。shaping（限制）只适用于向外的流量。</p>
<ul>
<li>SCHEDULING(调度)      </li>
</ul>
<p>　　通过调度数据包的传输，可以在带宽范围内，按照优先级分配带宽。SCHEDULING(调度)也只适于向外的流量。</p>
<ul>
<li>POLICING(策略)      </li>
</ul>
<p>　　SHAPING用于处理向外的流量，而POLICIING(策略)用于处理接收到的数据。</p>
<ul>
<li>DROPPING(丢弃)      </li>
</ul>
<p>　　如果流量超过某个设定的带宽，就丢弃数据包，不管是向内还是向外。</p>
<h2 id="2-2、流量控制处理对象"><a href="#2-2、流量控制处理对象" class="headerlink" title="2.2、流量控制处理对象"></a>2.2、流量控制处理对象</h2><p>　　流量的处理由三种对象控制，它们是：</p>
<ul>
<li>qdisc(排队规则)</li>
<li>class(类别)</li>
<li>filter(过滤器)</li>
</ul>
<h3 id="QDISC-排队规则"><a href="#QDISC-排队规则" class="headerlink" title="QDISC(排队规则)"></a>QDISC(排队规则)</h3><p>　　QDisc(排队规则)是queueing discipline的简写，它是理解流量控制(traffic control)的基础。<strong>无论何时，内核如果需要通过某个网络接口发送数据包，它都需要按照为这个接口配置的qdisc(排队规则)把数据包加入队列。</strong> 然后，内核会尽可能多地从qdisc里面取出数据包，把它们交给网络适配器驱动模块。最简单的QDisc是pfifo它不对进入的数据包做任何的处理，数据包采用先入先出的方式通过队列。不过，它会保存网络接口一时无法处理的数据包。</p>
<p>　　QDISC的类别如下：</p>
<h4 id="（1）、CLASSLESS-QDisc-不可分类QDisc"><a href="#（1）、CLASSLESS-QDisc-不可分类QDisc" class="headerlink" title="（1）、CLASSLESS QDisc(不可分类QDisc)"></a>（1）、CLASSLESS QDisc(不可分类QDisc)</h4><h5 id="1-无类别QDISC包括："><a href="#1-无类别QDISC包括：" class="headerlink" title="1. 无类别QDISC包括："></a>1. 无类别QDISC包括：</h5><p>　　<strong>[p|b]fifo</strong></p>
<p>　　使用最简单的qdisc，纯粹的先进先出。只有一个参数：limit，用来设置队列的长度,pfifo是以数据包的个数为单位；bfifo是以字节数为单位。</p>
<p>　　<strong>pfifo_fast</strong></p>
<p>　　在编译内核时，如果打开了高级路由器(Advanced Router)编译选项，pfifo_fast就是系统的标准QDISC。它的队列包括三个波段(band)。在每个波段里面，使用先进先出规则。而三个波段(band)的优先级也不相同，band 0的优先级最高，band 2的最低。如果band里面有数据包，系统就不会处理band 1里面的数据包，band 1和band 2之间也是一样。数据包是按照服务类型(Type of Service,TOS)被分配多三个波段(band)里面的。</p>
<p>　　<strong>red</strong></p>
<p>　　red是Random Early Detection(随机早期探测)的简写。如果使用这种QDISC，当带宽的占用接近于规定的带宽时，系统会随机地丢弃一些数据包。它非常适合高带宽应用。</p>
<p>　　<strong>sfq</strong></p>
<p>　　sfq是Stochastic Fairness Queueing的简写。它按照会话(session–对应于每个TCP连接或者UDP流)为流量进行排序，然后循环发送每个会话的数据包。</p>
<p>　　<strong>tbf</strong></p>
<p>　　tbf是Token Bucket Filter的简写，适合于把流速降低到某个值。</p>
<h5 id="2-不可分类QDisc的配置"><a href="#2-不可分类QDisc的配置" class="headerlink" title="2. 不可分类QDisc的配置"></a>2. 不可分类QDisc的配置</h5><p>　　如果没有可分类QDisc，不可分类QDisc只能附属于设备的根。它们的用法如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc qdisc add dev DEV root QDISC QDISC-PARAMETERS</div></pre></td></tr></table></figure>
<p>　　要删除一个不可分类QDisc，需要使用如下命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc qdisc del dev DEV root</div></pre></td></tr></table></figure>
<p>　　一个网络接口上如果没有设置QDisc，pfifo_fast就作为缺省的QDisc。</p>
<h4 id="（2）、CLASSFUL-QDISC-分类QDisc"><a href="#（2）、CLASSFUL-QDISC-分类QDisc" class="headerlink" title="（2）、CLASSFUL QDISC(分类QDisc)"></a>（2）、CLASSFUL QDISC(分类QDisc)</h4><h5 id="可分类的QDisc包括："><a href="#可分类的QDisc包括：" class="headerlink" title="可分类的QDisc包括："></a>可分类的QDisc包括：</h5><p>　　<strong>CBQ</strong></p>
<p>　　CBQ是Class Based Queueing(基于类别排队)的缩写。它实现了一个丰富的连接共享类别结构，既有限制(shaping)带宽的能力，也具有带宽优先级管理的能力。带宽限制是通过计算连接的空闲时间完成的。空闲时间的计算标准是数据包离队事件的频率和下层连接(数据链路层)的带宽。</p>
<p>　　<strong>HTB</strong></p>
<p>　　HTB是Hierarchy Token Bucket的缩写。通过在实践基础上的改进，它实现了一个丰富的连接共享类别体系。使用HTB可以很容易地保证每个类别的带宽，虽然它也允许特定的类可以突破带宽上限，占用别的类的带宽。HTB可以通过TBF(Token Bucket Filter)实现带宽限制，也能够划分类别的优先级。</p>
<p>　　<strong>PRIO</strong></p>
<p>　　PRIO QDisc不能限制带宽，因为属于不同类别的数据包是顺序离队的。使用PRIO QDisc可以很容易对流量进行优先级管理，只有属于高优先级类别的数据包全部发送完毕，才会发送属于低优先级类别的数据包。为了方便管理，需要使用iptables或者ipchains处理数据包的服务类型(Type Of Service,ToS)。</p>
<h3 id="CLASS-类"><a href="#CLASS-类" class="headerlink" title="CLASS(类)"></a>CLASS(类)</h3><p>　　某些QDisc(排队规则)可以包含一些类别，不同的类别中可以包含更深入的QDisc(排队规则)，通过这些细分的QDisc还可以为进入的队列的数据包排队。通过设置各种类别数据包的离队次序，QDisc可以为设置网络数据流量的优先级。</p>
<h3 id="FILTER-过滤器"><a href="#FILTER-过滤器" class="headerlink" title="FILTER(过滤器)"></a>FILTER(过滤器)</h3><p>　　Filter(过滤器)用于为数据包分类，决定它们按照何种QDisc进入队列。无论何时数据包进入一个划分子类的类别中，都需要进行分类。分类的方法可以有多种，使用fileter(过滤器)就是其中之一。使用filter(过滤器)分类时，内核会调用附属于这个类(class)的所有过滤器，直到返回一个判决。如果没有判决返回，就作进一步的处理，而处理方式和QDISC有关。需要注意的是，filter(过滤器)是在QDisc内部，它们不能作为主体。</p>
<h2 id="2-3、操作原理"><a href="#2-3、操作原理" class="headerlink" title="2.3、操作原理"></a>2.3、操作原理</h2><p>　　类(Class)组成一个树，每个类都只有一个父类，而一个类可以有多个子类。某些QDisc(例如：CBQ和HTB)允许在运行时动态添加类，而其它的QDisc(例如：PRIO)不允许动态建立类。允许动态添加类的QDisc可以有零个或者多个子类，由它们为数据包排队。此外，每个类都有一个叶子QDisc，默认情况下，这个叶子QDisc使用pfifo的方式排队，我们也可以使用其它类型的QDisc代替这个默认的QDisc。而且，这个叶子叶子QDisc有可以分类，不过每个子类只能有一个叶子QDisc。 当一个数据包进入一个分类QDisc，它会被归入某个子类。</p>
<p>　　我们可以使用以下三种方式为数据包归类，不过不是所有的QDisc都能够使用这三种方式：</p>
<ul>
<li>tc过滤器(tc filter)</li>
</ul>
<p>　　如果过滤器附属于一个类，相关的指令就会对它们进行查询。过滤器能够匹配数据包头所有的域，也可以匹配由ipchains或者iptables做的标记。</p>
<ul>
<li>服务类型(Type of Service)</li>
</ul>
<p>　　某些QDisc有基于服务类型（Type of Service,ToS）的内置的规则为数据包分类。</p>
<ul>
<li>skb-&gt;priority</li>
</ul>
<p>　　用户空间的应用程序可以使用SO_PRIORITY选项在skb-&gt;priority域设置一个类的ID。</p>
<p>　　树的每个节点都可以有自己的过滤器，但是高层的过滤器也可以直接用于其子类。</p>
<p>　　如果数据包没有被成功归类，就会被排到这个类的叶子QDisc的队中。相关细节在各个QDisc的手册页中。</p>
<h2 id="2-4、命名规则"><a href="#2-4、命名规则" class="headerlink" title="2.4、命名规则"></a>2.4、命名规则</h2><p>　　所有的QDisc、类和过滤器都有ID。ID可以手工设置，也可以有内核自动分配。ID由一个主序列号和一个从序列号组成，两个数字用一个冒号分开。</p>
<p>　　<strong>QDISC</strong></p>
<p>　　一个QDisc会被分配一个主序列号，叫做句柄(handle)，然后把从序列号作为类的命名空间。句柄采用象10:一样的表达方式。习惯上，需要为有子类的QDisc显式地分配一个句柄。</p>
<p>　　<strong>类(CLASS)</strong></p>
<p>　　在同一个QDisc里面的类分享这个QDisc的主序列号，但是每个类都有自己的从序列号，叫做类识别符(classid)。类识别符只与父QDisc有关，和父类无关。类的命名习惯和QDisc的相同。</p>
<p>　　<strong>过滤器(FILTER)</strong></p>
<p>　　过滤器的ID有三部分，只有在对过滤器进行散列组织才会用到。详情请参考tc-filters手册页。</p>
<h2 id="2-5、单位"><a href="#2-5、单位" class="headerlink" title="2.5、单位"></a>2.5、单位</h2><p>　　tc命令的所有参数都可以使用浮点数，可能会涉及到以下计数单位。</p>
<table>
<thead>
<tr>
<th>带宽或者流速单位：</th>
</tr>
</thead>
<tbody>
<tr>
<td>kbps</td>
<td>千字节/秒</td>
</tr>
<tr>
<td>mbps</td>
<td>兆字节/秒</td>
</tr>
<tr>
<td>kbit</td>
<td>KBits/秒</td>
</tr>
<tr>
<td>mbit</td>
<td>MBits/秒</td>
</tr>
<tr>
<td>bps或者一个无单位数字</td>
<td>字节数/秒</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>数据的数量单位：</th>
</tr>
</thead>
<tbody>
<tr>
<td>kb或者k</td>
<td>千字节</td>
</tr>
<tr>
<td>mb或者m</td>
<td>兆字节</td>
</tr>
<tr>
<td>mbit</td>
<td>兆bit</td>
</tr>
<tr>
<td>kbit</td>
<td>千bit</td>
</tr>
<tr>
<td>b或者一个无单位数字</td>
<td>字节数</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>时间的计量单位：</th>
</tr>
</thead>
<tbody>
<tr>
<td>s、sec或者secs</td>
<td>秒</td>
</tr>
<tr>
<td>ms、msec或者msecs</td>
<td>分钟</td>
</tr>
<tr>
<td>us、usec、usecs或者一个无单位数字</td>
<td>微秒</td>
</tr>
</tbody>
</table>
<h1 id="三、TC命令"><a href="#三、TC命令" class="headerlink" title="三、TC命令"></a>三、TC命令</h1><p>　　tc可以使用以下命令对QDisc、类和过滤器进行操作：</p>
<ul>
<li>add</li>
</ul>
<p>　　在一个节点里加入一个QDisc、类或者过滤器。添加时，需要传递一个祖先作为参数，传递参数时既可以使用ID也可以直接传递设备的根。如果要建立一个QDisc或者过滤器，可以使用句柄(handle)来命名；如果要建立一个类，可以使用类识别符(classid)来命名。</p>
<ul>
<li>remove</li>
</ul>
<p>　　删除有某个句柄(handle)指定的QDisc，根QDisc(root)也可以删除。被删除QDisc上的所有子类以及附属于各个类的过滤器都会被自动删除。</p>
<ul>
<li>change</li>
</ul>
<p>　　以替代的方式修改某些条目。除了句柄(handle)和祖先不能修改以外，change命令的语法和add命令相同。换句话说，change命令不能一定节点的位置。</p>
<ul>
<li>replace</li>
</ul>
<p>　　对一个现有节点进行近于原子操作的删除/添加。如果节点不存在，这个命令就会建立节点。</p>
<ul>
<li>link</li>
</ul>
<p>　　只适用于DQisc，替代一个现有的节点。</p>
<h1 id="四、具体操作"><a href="#四、具体操作" class="headerlink" title="四、具体操作"></a>四、具体操作</h1><p>　　Linux流量控制主要分为建立队列、建立分类和建立过滤器三个方面。</p>
<h2 id="4-1、基本实现步骤为："><a href="#4-1、基本实现步骤为：" class="headerlink" title="4.1、基本实现步骤为："></a>4.1、基本实现步骤为：</h2><ul>
<li>（1） 针对网络物理设备（如以太网卡eth0）绑定一个队列QDisc；</li>
<li>（2） 在该队列上建立分类class；</li>
<li>（3） 为每一分类建立一个基于路由的过滤器filter；</li>
<li>（4） 最后与过滤器相配合，建立特定的路由表。</li>
</ul>
<h2 id="4-2、环境模拟实例"><a href="#4-2、环境模拟实例" class="headerlink" title="4.2、环境模拟实例:"></a>4.2、环境模拟实例:</h2><p>　　流量控制器上的以太网卡(eth0) 的IP地址为192.168.1.66，在其上建立一个CBQ队列。假设包的平均大小为1000字节，包间隔发送单元的大小为8字节，可接收冲突的发送最长包数目为20字节。</p>
<p>　　假如有三种类型的流量需要控制: </p>
<ol>
<li>是发往主机1的，其IP地址为192.168.1.24。其流量带宽控制在8Mbit，优先级为2；</li>
<li>是发往主机2的，其IP地址为192.168.1.30。其流量带宽控制在1Mbit，优先级为1；</li>
<li>是发往子网1的，其子网号为192.168.1.0，子网掩码为255.255.255.0。流量带宽控制在1Mbit，优先级为6。</li>
</ol>
<h3 id="1-建立队列"><a href="#1-建立队列" class="headerlink" title="1. 建立队列"></a>1. 建立队列</h3><p>　　一般情况下，针对一个网卡只需建立一个队列。</p>
<p>　　将一个cbq队列绑定到网络物理设备eth0上，其编号为1:0；网络物理设备eth0的实际带宽为10 Mbit，包的平均大小为1000字节；包间隔发送单元的大小为8字节，最小传输包大小为64字节。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc qdisc add dev eth0 root handle 1: cbq bandwidth 10Mbit avpkt 1000 cell 8 mpu 64</div></pre></td></tr></table></figure>
<h3 id="2-建立分类"><a href="#2-建立分类" class="headerlink" title="2. 建立分类"></a>2. 建立分类</h3><p>　　分类建立在队列之上。</p>
<p>　　一般情况下，针对一个队列需建立一个根分类，然后再在其上建立子分类。对于分类，按其分类的编号顺序起作用，编号小的优先；一旦符合某个分类匹配规则，通过该分类发送数据包，则其后的分类不再起作用。</p>
<p>　　<strong>1） 创建根分类1:1；分配带宽为10Mbit，优先级别为8。</strong></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc class add dev eth0 parent 1:0 classid 1:1 cbq bandwidth 10Mbit rate 10Mbit maxburst 20 allot 1514 prio 8 avpkt 1000 cell 8 weight 1Mbit</div></pre></td></tr></table></figure>
<p>　　该队列的最大可用带宽为10Mbit，实际分配的带宽为10Mbit，可接收冲突的发送最长包数目为20字节；最大传输单元加MAC头的大小为1514字节，优先级别为8，包的平均大小为1000字节，包间隔发送单元的大小为8字节，相应于实际带宽的加权速率为1Mbit。</p>
<p>　　<strong>2）创建分类1:2，其父分类为1:1，分配带宽为8Mbit，优先级别为2。</strong></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc class add dev eth0 parent 1:1 classid 1:2 cbq bandwidth 10Mbit rate 8Mbit maxburst 20 allot 1514 prio 2 avpkt 1000 cell 8 weight 800Kbit split 1:0 bounded</div></pre></td></tr></table></figure>
<p>　　该队列的最大可用带宽为10Mbit，实际分配的带宽为 8Mbit，可接收冲突的发送最长包数目为20字节；最大传输单元加MAC头的大小为1514字节，优先级别为1，包的平均大小为1000字节，包间隔发送单元的大小为8字节，相应于实际带宽的加权速率为800Kbit，分类的分离点为1:0，且不可借用未使用带宽。</p>
<p>　　<strong>3）创建分类1:3，其父分类为1:1，分配带宽为1Mbit，优先级别为1。</strong></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc class add dev eth0 parent 1:1 classid 1:3 cbq bandwidth 10Mbit rate 1Mbit maxburst 20 allot 1514 prio 1 avpkt 1000 cell 8 weight 100Kbit split 1:0</div></pre></td></tr></table></figure>
<p>　　该队列的最大可用带宽为10Mbit，实际分配的带宽为 1Mbit，可接收冲突的发送最长包数目为20字节；最大传输单元加MAC头的大小为1514字节，优先级别为2，包的平均大小为1000字节，包间隔发送单元的大小为8字节，相应于实际带宽的加权速率为100Kbit，分类的分离点为1:0。</p>
<p>　　<strong>4）创建分类1:4，其父分类为1:1，分配带宽为1Mbit，优先级别为6。</strong></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc class add dev eth0 parent 1:1 classid 1:4 cbq bandwidth 10Mbit rate 1Mbit maxburst 20 allot 1514 prio 6 avpkt 1000 cell 8 weight 100Kbit split 1:0</div></pre></td></tr></table></figure>
<p>　　该队列的最大可用带宽为10Mbit，实际分配的带宽为1Mbit，可接收冲突的发送最长包数目为20字节；最大传输单元加MAC头的大小为1514字节，优先级别为6，包的平均大小为1000字节，包间隔发送单元的大小为8字节，相应于实际带宽的加权速率为100Kbit，分类的分离点为1:0。</p>
<h2 id="4-3-建立过滤器"><a href="#4-3-建立过滤器" class="headerlink" title="4.3. 建立过滤器"></a>4.3. 建立过滤器</h2><p>　　过滤器主要服务于分类。</p>
<p>一般只需针对根分类提供一个过滤器，然后为每个子分类提供路由映射。</p>
<p><strong>1） 应用路由分类器到cbq队列的根，父分类编号为1:0；过滤协议为ip，优先级别为100，过滤器为基于路由表。</strong></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc filter add dev eth0 parent 1:0 protocol ip prio 100 route</div></pre></td></tr></table></figure>
<p><strong>2） 建立路由映射分类1:2, 1:3, 1:4</strong></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tc filter add dev eth0 parent 1:0 protocol ip prio 100 route to 2 flowid 1:2</div><div class="line"></div><div class="line">tc filter add dev eth0 parent 1:0 protocol ip prio 100 route to 3 flowid 1:3</div><div class="line"></div><div class="line">tc filter add dev eth0 parent 1:0 protocol ip prio 100 route to 4 flowid 1:4</div></pre></td></tr></table></figure>
<h2 id="4-4-建立路由"><a href="#4-4-建立路由" class="headerlink" title="4.4.建立路由"></a>4.4.建立路由</h2><p>　　该路由是与前面所建立的路由映射一一对应。</p>
<p>　　<strong>1） 发往主机192.168.1.24的数据包通过分类2转发(分类2的速率8Mbit)</strong></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ip route add 192.168.1.24 dev eth0 via 192.168.1.66 realm 2</div></pre></td></tr></table></figure>
<p>　　<strong>2） 发往主机192.168.1.30的数据包通过分类3转发(分类3的速率1Mbit)</strong></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ip route add 192.168.1.30 dev eth0 via 192.168.1.66 realm 3</div></pre></td></tr></table></figure>
<p>　　<strong>3）发往子网192.168.1.0/24的数据包通过分类4转发(分类4的速率1Mbit)</strong></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ip route add 192.168.1.0/24 dev eth0 via 192.168.1.66 realm 4</div></pre></td></tr></table></figure>
<p>　　<strong>注</strong>：一般对于流量控制器所直接连接的网段建议使用IP主机地址流量控制限制，不要使用子网流量控制限制。如一定需要对直连子网使用子网流量控制限制，则在建立该子网的路由映射前，需将原先由系统建立的路由删除，才可完成相应步骤。</p>
<h2 id="4-5-监视"><a href="#4-5-监视" class="headerlink" title="4.5. 监视"></a>4.5. 监视</h2><p>　　主要包括对现有队列、分类、过滤器和路由的状况进行监视。</p>
<p>　　<strong>1）显示队列的状况</strong></p>
<p>　　简单显示指定设备(这里为eth0)的队列状况</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">tc qdisc ls dev eth0</div><div class="line"></div><div class="line">qdisc cbq 1: rate 10Mbit (bounded,isolated) prio no-transmit</div></pre></td></tr></table></figure>
<p>　　详细显示指定设备(这里为eth0)的队列状况</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc -s qdisc ls dev eth0</div></pre></td></tr></table></figure>
<p>　　这里主要显示了通过该队列发送了13232个数据包，数据流量为7646731个字节，丢弃的包数目为0，超过速率限制的包数目为0。</p>
<p>　　<strong>2）显示分类的状况</strong></p>
<p>　　简单显示指定设备(这里为eth0)的分类状况</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc class ls dev eth0</div></pre></td></tr></table></figure>
<p>　　详细显示指定设备(这里为eth0)的分类状况</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc -s class ls dev eth0</div></pre></td></tr></table></figure>
<p>　　这里主要显示了通过不同分类发送的数据包，数据流量，丢弃的包数目，超过速率限制的包数目等等。其中根分类(class cbq 1:0)的状况应与队列的状况类似。</p>
<p>　　例如，分类class cbq 1:4发送了8076个数据包，数据流量为5552879个字节，丢弃的包数目为0，超过速率限制的包数目为0。</p>
<p>　　<strong>3）显示过滤器的状况</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tc -s filter ls dev eth0</div></pre></td></tr></table></figure>
<p>　　这里flowid 1:2代表分类class cbq 1:2，to 2代表通过路由2发送。</p>
<p>　　<strong>4）显示现有路由的状况</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ip route</div></pre></td></tr></table></figure>
<p>　　如上所示，结尾包含有realm的显示行是起作用的路由过滤器。</p>
<h1 id="五、实例脚本"><a href="#五、实例脚本" class="headerlink" title="五、实例脚本"></a>五、实例脚本</h1><h2 id="5-1-tc限速"><a href="#5-1-tc限速" class="headerlink" title="5.1 tc限速"></a>5.1 tc限速</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#! /bin/sh</span></div><div class="line"></div><div class="line">touch  /var/lock/subsys/<span class="built_in">local</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span>  1  &gt; /proc/sys/net/ipv4/ip_forward （激活转发）</div><div class="line"></div><div class="line">route add default  gw  10.0.0.0  (这是加入电信网关，如果你已设了不用这条）</div><div class="line"></div><div class="line">DOWNLOAD=640Kbit        (640/8 =80K ,我这里限制下载最高速度只能80K）</div><div class="line">UPLOAD=640Kbit          (640/8 =80K,上传速度也限制在80K）</div><div class="line">INET=192.168.0.         (设置网段，根据你的情况填）</div><div class="line">IPS=1                   (这个意思是从192.168.0.1开始）</div><div class="line">IPE=200                 (我这设置是从IP为192.168.0.1-200这个网段限速，根据自已的需要改）</div><div class="line">ServerIP=253            (网关IP）</div><div class="line">IDEV=eth0</div><div class="line">ODEV=eth1</div><div class="line"></div><div class="line">/sbin/tc  qdisc  del  dev  <span class="variable">$IDEV</span> root handle 10:</div><div class="line">/sbin/tc  qdisc  del  dev  <span class="variable">$ODEV</span>  root handle  20:</div><div class="line">/sbin/tc  qdisc  add  dev <span class="variable">$IDEV</span>  root  handle  10: cbq  bandwidth  100Mbit avpkt  1000</div><div class="line">/sbin/tc  qdisc  add  dev  <span class="variable">$ODEV</span>  root  handle  20: cbq bandwidth  1Mbit  avpkt  1000</div><div class="line">/sbin/tc  class  add  dev <span class="variable">$IDEV</span>  parent 10:0  classid  10:1  cbq  bandwidth  100Mbit  rate 100Mbit  allot 1514  weight  1Mbit  prio  8  maxburst  20  avpkt  1000</div><div class="line">/sbin/tc  class  add  dev  <span class="variable">$ODEV</span>  parent  20:0  classid  20:1 cbq  bandwidth  1Mbit  rate  1Mbit  allot  1514  weitht  10Kbit  prio  8  maxburst  20  avpkt  1000</div><div class="line"></div><div class="line">COUNTER=<span class="variable">$IPS</span></div><div class="line"><span class="keyword">while</span>  [  <span class="variable">$COUNTER</span>  -le  <span class="variable">$IPE</span>  ]</div><div class="line">    <span class="keyword">do</span></div><div class="line">/sbin/tc  class  add  dev  <span class="variable">$IDEV</span>  parent  10:1  classid  10:1<span class="variable">$COUNTER</span>  cbq  banwidth  100Mbit  rate  </div><div class="line"><span class="variable">$DOWNLOAD</span>  allot  1514  weight  20Kbit  prio  5  maxburst  20  avpkt  1000  bounded</div><div class="line">/sbin/tc  qdisc  add  dev  <span class="variable">$IDEV</span>  parent  10:1<span class="variable">$COUNTER</span>  sfq  quantum  1514b  perturb15</div><div class="line"></div><div class="line">/sbin/tc  filter  add  dev  <span class="variable">$IDEV</span>  parent  10:0  protocol  ip  prio  100  u32  match  ipdst  <span class="variable">$INET</span><span class="variable">$COUNTER</span>  flowid  10:1<span class="variable">$COUNTER</span></div><div class="line">      COUNTER=` expr  <span class="variable">$COUNTER</span>  +  1  `</div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line">iptables  -t  nat  -A  POSTROUTING  -o  eth1  <span class="_">-s</span>  192.168.0.0/24  -J  MASQUERADE</div></pre></td></tr></table></figure>
<h2 id="5-2-模型"><a href="#5-2-模型" class="headerlink" title="5.2 模型"></a>5.2 模型</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line">tc qdisc del dev eth7 root &amp;&gt; /dev/null</div><div class="line">tc qdisc del dev eth8 root &amp;&gt; /dev/null</div><div class="line"></div><div class="line"><span class="comment">#Add qdisc</span></div><div class="line">tc qdisc add dev eth7 root handle 10: htb default 9998</div><div class="line">tc qdisc add dev eth8 root handle 10: htb default 9998</div><div class="line"></div><div class="line"><span class="comment">#Add htb root node</span></div><div class="line">tc class add dev eth7 parent 10: classid 10:9999 htb rate 1000000kbit ceil 1000000kbit</div><div class="line">tc class add dev eth8 parent 10: classid 10:9999 htb rate 1000000kbit ceil 1000000kbit</div><div class="line"></div><div class="line"><span class="comment">#Add htb fake default node here</span></div><div class="line">tc class add dev eth7 parent 10:9999 classid 10:9998 htb rate 1000000kbit ceil 1000000kbit</div><div class="line">tc class add dev eth8 parent 10:9999 classid 10:9998 htb rate 1000000kbit ceil 1000000kbit</div><div class="line"></div><div class="line"><span class="comment">#Add rule node</span></div><div class="line">tc class add dev eth7 parent 10:9999 classid 10:3 htb rate 1kbit ceil 50kbit</div><div class="line">tc filter add dev eth7 parent 10: protocol ip handle 3 fw classid 10:3</div><div class="line">tc class add dev eth8 parent 10:9999 classid 10:3 htb rate 1kbit ceil 50kbit</div><div class="line">tc filter add dev eth8 parent 10: protocol ip handle 3 fw classid 10:3</div><div class="line"></div><div class="line"><span class="comment">#Add htb real default node here</span></div><div class="line">tc class change dev eth7 classid 10:9998 htb rate 1kbit ceil 1000000kbit</div><div class="line">tc class change dev eth8 classid 10:9998 htb rate 1kbit ceil 1000000kbit</div></pre></td></tr></table></figure>
<h2 id="5-3-限制一个IP上传下载速度"><a href="#5-3-限制一个IP上传下载速度" class="headerlink" title="5.3 限制一个IP上传下载速度"></a>5.3 限制一个IP上传下载速度</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#  tc uses the following units when passed as a parameter.</span></div><div class="line"><span class="comment">#  kbps: Kilobytes per second</span></div><div class="line"><span class="comment">#  mbps: Megabytes per second</span></div><div class="line"><span class="comment">#  kbit: Kilobits per second</span></div><div class="line"><span class="comment">#  mbit: Megabits per second</span></div><div class="line"><span class="comment">#  bps: Bytes per second</span></div><div class="line"><span class="comment">#       Amounts of data can be specified in:</span></div><div class="line"><span class="comment">#       kb or k: Kilobytes</span></div><div class="line"><span class="comment">#       mb or m: Megabytes</span></div><div class="line"><span class="comment">#       mbit: Megabits</span></div><div class="line"><span class="comment">#       kbit: Kilobits</span></div><div class="line"><span class="comment">#  To get the byte figure from bits, divide the number by 8 bit</span></div><div class="line"><span class="comment">#</span></div><div class="line"></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Name of the traffic control command.</span></div><div class="line">TC=/sbin/tc</div><div class="line"></div><div class="line"><span class="comment"># The network interface we're planning on limiting bandwidth.</span></div><div class="line">IF=em1             <span class="comment"># Interface</span></div><div class="line"></div><div class="line"><span class="comment"># Download limit (in mega bits)</span></div><div class="line">DNLD=80mbit          <span class="comment"># DOWNLOAD Limit</span></div><div class="line"></div><div class="line"><span class="comment"># Upload limit (in mega bits)</span></div><div class="line">UPLD=80mbit          <span class="comment"># UPLOAD Limit</span></div><div class="line"></div><div class="line"><span class="comment"># IP address of the machine we are controlling</span></div><div class="line">IP=125.64.15.21     <span class="comment"># Host IP</span></div><div class="line"></div><div class="line"><span class="comment"># Filter options for limiting the intended interface.</span></div><div class="line">U32=<span class="string">"<span class="variable">$TC</span> filter add dev <span class="variable">$IF</span> protocol ip parent 1:0 prio 1 u32"</span></div><div class="line"></div><div class="line"><span class="function"><span class="title">start</span></span>() &#123;</div><div class="line"></div><div class="line"><span class="comment"># We'll use Hierarchical Token Bucket (HTB) to shape bandwidth.</span></div><div class="line"><span class="comment"># For detailed configuration options, please consult Linux man</span></div><div class="line"><span class="comment"># page.</span></div><div class="line"></div><div class="line">    <span class="variable">$TC</span> qdisc add dev <span class="variable">$IF</span> root handle 1: htb default 30</div><div class="line">    <span class="variable">$TC</span> class add dev <span class="variable">$IF</span> parent 1: classid 1:1 htb rate <span class="variable">$DNLD</span></div><div class="line">    <span class="variable">$TC</span> class add dev <span class="variable">$IF</span> parent 1: classid 1:2 htb rate <span class="variable">$UPLD</span></div><div class="line">    <span class="variable">$U32</span> match ip dst <span class="variable">$IP</span>/32 flowid 1:1</div><div class="line">    <span class="variable">$U32</span> match ip src <span class="variable">$IP</span>/32 flowid 1:2</div><div class="line"></div><div class="line"><span class="comment"># The first line creates the root qdisc, and the next two lines</span></div><div class="line"><span class="comment"># create two child qdisc that are to be used to shape download</span></div><div class="line"><span class="comment"># and upload bandwidth.</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># The 4th and 5th line creates the filter to match the interface.</span></div><div class="line"><span class="comment"># The 'dst' IP address is used to limit download speed, and the</span></div><div class="line"><span class="comment"># 'src' IP address is used to limit upload speed.</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">stop</span></span>() &#123;</div><div class="line"></div><div class="line"><span class="comment"># Stop the bandwidth shaping.</span></div><div class="line">    <span class="variable">$TC</span> qdisc del dev <span class="variable">$IF</span> root</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">restart</span></span>() &#123;</div><div class="line"></div><div class="line"><span class="comment"># Self-explanatory.</span></div><div class="line">    stop</div><div class="line">    sleep 1</div><div class="line">    start</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="title">show</span></span>() &#123;</div><div class="line"></div><div class="line"><span class="comment"># Display status of traffic control status.</span></div><div class="line">    <span class="variable">$TC</span> <span class="_">-s</span> qdisc ls dev <span class="variable">$IF</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></div><div class="line"></div><div class="line">  start)</div><div class="line"></div><div class="line">    <span class="built_in">echo</span> -n <span class="string">"Starting bandwidth shaping: "</span></div><div class="line">    start</div><div class="line">    <span class="built_in">echo</span> <span class="string">"done"</span></div><div class="line">    ;;</div><div class="line"></div><div class="line">  stop)</div><div class="line"></div><div class="line">    <span class="built_in">echo</span> -n <span class="string">"Stopping bandwidth shaping: "</span></div><div class="line">    stop</div><div class="line">    <span class="built_in">echo</span> <span class="string">"done"</span></div><div class="line">    ;;</div><div class="line"></div><div class="line">  restart)</div><div class="line"></div><div class="line">    <span class="built_in">echo</span> -n <span class="string">"Restarting bandwidth shaping: "</span></div><div class="line">    restart</div><div class="line">    <span class="built_in">echo</span> <span class="string">"done"</span></div><div class="line">    ;;</div><div class="line"></div><div class="line">  show)</div><div class="line"></div><div class="line">    <span class="built_in">echo</span> <span class="string">"Bandwidth shaping status for <span class="variable">$IF</span>:"</span></div><div class="line">    show</div><div class="line">    <span class="built_in">echo</span> <span class="string">""</span></div><div class="line">    ;;</div><div class="line"></div><div class="line">  *)</div><div class="line"></div><div class="line">    <span class="built_in">pwd</span>=$(<span class="built_in">pwd</span>)</div><div class="line">    <span class="built_in">echo</span> <span class="string">"Usage: tc.bash &#123;start|stop|restart|show&#125;"</span></div><div class="line">    ;;</div><div class="line"></div><div class="line"><span class="keyword">esac</span></div><div class="line"></div><div class="line"><span class="built_in">exit</span> 0</div></pre></td></tr></table></figure>
<p>本文原文出处:<a href="http://leslie-chu.blog.163.com/blog/static/19986324320125414618221" target="_blank" rel="external">http://leslie-chu.blog.163.com/blog/static/19986324320125414618221</a></p>
<p>主要参考（所有权利归原文作者所有）：</p>
<p><a href="http://www.cnblogs.com/endsock/archive/2011/12/09/2281519.html" target="_blank" rel="external">http://www.cnblogs.com/endsock/archive/2011/12/09/2281519.html</a></p>
<p><a href="http://blog.163.com/ninja_wk/blog/static/989155620084280154811/" target="_blank" rel="external">http://blog.163.com/ninja_wk/blog/static/989155620084280154811/</a></p>
<p><a href="http://www.chinaunix.net/jh/4/16110.html" target="_blank" rel="external">http://www.chinaunix.net/jh/4/16110.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、TC原理&quot;&gt;&lt;a href=&quot;#一、TC原理&quot; class=&quot;headerlink&quot; title=&quot;一、TC原理&quot;&gt;&lt;/a&gt;一、TC原理&lt;/h1&gt;&lt;p&gt;　　Linux操作系统中的流量控制器TC（Traffic Control）用于Linux内核的流量控制，主要是通过在输出端口处建立一个队列来实现流量控制。&lt;/p&gt;
    
    </summary>
    
      <category term="service" scheme="http://www.unix-like.com/categories/service/"/>
    
    
      <category term="tc" scheme="http://www.unix-like.com/tags/tc/"/>
    
  </entry>
  
  <entry>
    <title>Linux上ssd优化</title>
    <link href="http://www.unix-like.com/2017/05/27/system/Linux%E4%B8%8Assd%E4%BC%98%E5%8C%96/"/>
    <id>http://www.unix-like.com/2017/05/27/system/Linux上ssd优化/</id>
    <published>2017-05-27T15:18:28.000Z</published>
    <updated>2017-05-27T15:19:32.199Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、修改默认的固态硬盘-SSD-柱面大小"><a href="#一、修改默认的固态硬盘-SSD-柱面大小" class="headerlink" title="一、修改默认的固态硬盘(SSD)柱面大小"></a>一、修改默认的固态硬盘(SSD)柱面大小</h1><p>　　提升Linux下固态硬盘的使用率，在安装Linux操作系统前就应该做相关工作。系统会先在磁盘上创建分区，通常创建的分区包含固定数量的柱面，而默认情况下，每个柱面由16065512个字节的扇区组成。</p>
<a id="more"></a>
<p>　　现在的问题是，当默认柱面空间大小被完全使用后，固态硬盘就不能发挥最佳性能。因为要固态硬盘读这个操作需要使用4KB的字节块，而固态硬盘控制器删除操 作则需要512KB的字节块。问题是，有了通常用于Linux上的默认分区，分区的开始没必要也是一个4KB新分区的开始。结果，一次读取或写入操作也许 需要SSD设备上的两个不同的区块，这也减缓了SSD磁盘的性能。</p>
<p>　　为了避免这种问题，可以采用fdisk方式来创建分区，配置三个选项来指定使用柱面及拍面大小。具体的命令如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fdisk -H 32 -C 32 –c /dev/sdb</div></pre></td></tr></table></figure>
<h1 id="二、配置固态硬盘-SSD-的文件系统"><a href="#二、配置固态硬盘-SSD-的文件系统" class="headerlink" title="二、配置固态硬盘(SSD)的文件系统"></a>二、配置固态硬盘(SSD)的文件系统</h1><h3 id="1-创建文件系统"><a href="#1-创建文件系统" class="headerlink" title="1.创建文件系统"></a>1.创建文件系统</h3><p>　　接着需要关注的就是文件系统。想要优化文件系统删除字节区块的效率，就必须确保小于512K的文件分布在不同的删除字节区块上。要做到这一点，必须确保在创建可扩展文件系统时指定了需要使用的条带的宽度和幅度。这些值在页面中指定，默认大小为4KB。要创建一个最佳的可扩展文件系统，应该使用如下命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkfs.ext4 -E stride=128,stripe-width=128 /dev/sda1</div></pre></td></tr></table></figure>
<p>　　如果要修改现有的文件系统的参数，可以使用tune2fs实用程序：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tune2fs -E stride=128,stripe-width=128 /dev/sda1</div></pre></td></tr></table></figure>
<h3 id="2-文件系统日志"><a href="#2-文件系统日志" class="headerlink" title="2.文件系统日志"></a>2.文件系统日志</h3><p>　　关闭日志功能，可以延长SSD寿命，但是突然断电容易造成文件损坏</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tune2fs -O ^has_journal /dev/sda2  关闭日志；</div></pre></td></tr></table></figure>
<p>　　然后执行</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">e2fsck <span class="_">-f</span> /dev/sda2；</div></pre></td></tr></table></figure>
<p>　　检查日志是否关闭成功：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dmesg | grep EXT4</div></pre></td></tr></table></figure>
<p>　　如果显示 “EXT4-fs (sda2): mounted filesystem without journal”  说明关闭日志成功；否则显示 “mounted filesystem with ordered data mode”</p>
<p>　　要打开日志</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tune2fs -O has_journal /dev/sda2</div></pre></td></tr></table></figure>
<h3 id="3-设置noatime"><a href="#3-设置noatime" class="headerlink" title="3.设置noatime"></a>3.设置noatime</h3><p>　　不记录文件访问时间，该选项保证了文件的访问时间不会因为每次读取而更新，从而降低对文件系统的写入次数。</p>
<p>　　在fstb 中加入noatime　选项</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/dev/sda1 / ext4 discard,defaults  改为  /dev/sda1 / ext4 noatime,defaults</div></pre></td></tr></table></figure>
<h1 id="三、配置固态硬盘-SSD-的I-O调度程序"><a href="#三、配置固态硬盘-SSD-的I-O调度程序" class="headerlink" title="三、配置固态硬盘(SSD)的I/O调度程序"></a>三、配置固态硬盘(SSD)的I/O调度程序</h1><p>　　优化的第三个部分涉及到I/O调度程序。该模块是一个决定如何处理I/O请求的核心组件。默认情况下就是非常公平的排队，对于普通的磁盘驱动器来说，这是很好的方案，但对于以期限调度为优势的固态硬盘来说，这并不是最好的。</p>
<p>　　如果你想在系统中对所有磁盘采用期限调度，可以在内核加载时把<code>elevator=deadline</code>这句话加入到系统引导管理器(GURB)中;如果你只是想针对某一个磁盘，就应该在rc.local文件中加入类似如下实例的一句话，那么每次当系统重启，期限调度就会应用到指定的磁盘。如下实例将会对 /dev/sdb磁盘采用期限调度。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> deadline &gt; /sys/block/xvda/queue/scheduler</div></pre></td></tr></table></figure>
<p>　　给IO的算法修改成 noop,操作系统本身不做处理,让 ssd 本身处理.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> noop &gt;  /sys/block/sda/queue/scheduler</div></pre></td></tr></table></figure>
<h1 id="四、清理固态硬盘-SSD-中的数据块"><a href="#四、清理固态硬盘-SSD-中的数据块" class="headerlink" title="四、清理固态硬盘(SSD)中的数据块"></a>四、清理固态硬盘(SSD)中的数据块</h1><p>　　最后一个重要的步骤称为“清理”，该操作可以确保在删除文件后相应的数据块真正清空，然后在创建新的文件时才能有可用的数据块。如果没有清理操作，一旦数 据块空间填满，固态硬盘的性能就会下降。如果使用丢弃挂载选项，当文件删除后，数据块也会被相应地清除，这样可以显著提高固态硬盘的性能。2.6.33以 上的内核已经支持清理操作。</p>
<p>　　Linux内核从2.6.33开始提供TRIM支持，所以先运行“uname -a”命令，查看自己的内核版本，如果内核版本低于2.6.33的，请先升级内核。然后运行“hdparm -I /dev/sda”查看自己的硬盘支不支持TRIM技术，如果支持，你会看到</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">* Data Set Management TRIM supported</div></pre></td></tr></table></figure>
<p>　　注意：如果SSD组RAID0后，将失去Trim功能</p>
<p>　　如果上面两个条件都满足了，就可以在fstab中添加discard来开启TRIM功能，如：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">原始的UUID=2f6be0cf-2f54-4646-b8c6-5fb0aa01ef23 / ext4 defaults,errors=remount-ro 0 1</div><div class="line">改后的UUID=2f6be0cf-2f54-4646-b8c6-5fb0aa01ef23 / ext4 discard,defaults,errors=remount-ro,noatime 0 1</div></pre></td></tr></table></figure>
<p>　　在fasab配置文件中完成对文件系统的这些修改后，重启计算机，或者通知文件系统重新读取其配置，然后使用/etc/fstab文件中包含的mount -o remount命令重新安装每个文件系统。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、修改默认的固态硬盘-SSD-柱面大小&quot;&gt;&lt;a href=&quot;#一、修改默认的固态硬盘-SSD-柱面大小&quot; class=&quot;headerlink&quot; title=&quot;一、修改默认的固态硬盘(SSD)柱面大小&quot;&gt;&lt;/a&gt;一、修改默认的固态硬盘(SSD)柱面大小&lt;/h1&gt;&lt;p&gt;　　提升Linux下固态硬盘的使用率，在安装Linux操作系统前就应该做相关工作。系统会先在磁盘上创建分区，通常创建的分区包含固定数量的柱面，而默认情况下，每个柱面由16065512个字节的扇区组成。&lt;/p&gt;
    
    </summary>
    
      <category term="system" scheme="http://www.unix-like.com/categories/system/"/>
    
    
      <category term="调优" scheme="http://www.unix-like.com/tags/%E8%B0%83%E4%BC%98/"/>
    
  </entry>
  
</feed>
